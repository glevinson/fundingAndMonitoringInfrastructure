{
	"id": "376f321170be91a968f9c5ed428dd114",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Fundraising.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.7;\n\n// For Remix Deployment:\n//********************************************************************************************************************************************************** */\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n//********************************************************************************************************************************************************** */\n\n// For truffle deployment:\n// import \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\n// import \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n// import \"../node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\";\n// import \"../node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\";\n\n// Referenced from: https://ethereum.stackexchange.com/questions/84095/how-to-get-the-decimals-of-erc20-token-in-smart-contract\nabstract contract IERC20Extented is IERC20 {\n    function decimals() public view virtual returns (uint8);\n}\n\ncontract Fundraising is ERC20 {\n    IERC20Extented public coin; // The ERC-20 coin that admin has decided to raise funds in\n    IERC721 public immutable projectMarketplace; // ProjectMarketplace contract that has created this Fundraising contract\n    uint256 public targetAmount;\n    uint256 public amountRaised;\n    uint256 public dataAccessThreshold; // Minimum number of ERC20 tokens required to access the corresponding projects data\n    bool public paused = false; \n    bool public killed = false;\n    address admin;\n\n    constructor(uint256 amount, string memory name, string memory symbol, uint256 _dataAccessThreshold, address _admin, address coinAddress) ERC20(name, symbol) {\n        targetAmount = amount;\n        dataAccessThreshold = _dataAccessThreshold;\n        admin = _admin;\n        coin = IERC20Extented(coinAddress);\n        projectMarketplace = IERC721(msg.sender);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return coin.decimals();\n    }\n\n    modifier onlyOwner(){\n            require(msg.sender == admin, \"Only Admin Can Pause/Unpause\");\n            _;\n    }\n\n    /* Enables this contract to recieve the project ERC-721 token */\n    function onERC721Received(address, address, uint256, bytes calldata) external pure returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n\n    function pause() onlyOwner external {\n        if (!paused){\n            paused = true;\n        }\n        else{\n            paused = false;\n        }\n    }\n\n    function kill() onlyOwner external {\n        killed = true;\n    }\n\n    function amountUntilReachTarget() public view returns (uint256){\n        return (targetAmount - amountRaised) ;\n    }\n\n    /* User's can invest if the specified investment */\n    function invest(uint256 value) external {\n        require( totalSupply() < targetAmount, \"Target Already Raised\" );\n        require(value <= targetAmount - totalSupply(), \"Not enough shares left!\");\n        require( !paused, \"Contract Is Paused\" );\n        require( !killed, \"Contract Is Killed\");\n\n        coin.transferFrom(msg.sender, address(this), value);\n        amountRaised += value;\n        _mint(msg.sender, value);\n\n        if (targetAmount == totalSupply()) { \n            coin.transfer(admin, targetAmount);\n        }\n    }\n\n    /* Investor's can withdraw their investment if the target has not already been raised yet */\n    function withdrawInvestment(uint256 value) external {\n        require( totalSupply() < targetAmount , \"Target Already Raised\" );\n        require(value <= balanceOf(msg.sender), \"Not Great Enough Balance!\"); // As DAI instatneously removed when targetRaised, this require should also cover that s\n        coin.transfer(msg.sender, value);\n        amountRaised -= value;\n        _burn(msg.sender, value);\n    }\n\n    /* If a user has invested the full target amount, they can redeem their RFT supply for the project's NFT */\n    function redeemNFT() external {\n        require( balanceOf(msg.sender) == targetAmount, \"Do Not Have RFT Total Supply\" );\n        _burn(msg.sender, totalSupply() );\n        projectMarketplace.safeTransferFrom( address(this), msg.sender, uint256(uint160(address(this))));\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1428:1442   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1421:1443   */\n      iszero\n        /* \"#utility.yul\":1403:1444   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1376:1394   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1263:1450   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":5051:5076   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5039:5041   */\n      0x20\n        /* \"#utility.yul\":5024:5042   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":4905:5082   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5229:5265   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5217:5219   */\n      0x20\n        /* \"#utility.yul\":5202:5220   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":5087:5271   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_75:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_82:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_75\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_89\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4701:4703   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4683:4704   */\n      mstore\n        /* \"#utility.yul\":4740:4742   */\n      0x25\n        /* \"#utility.yul\":4720:4738   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4713:4743   */\n      mstore\n        /* \"#utility.yul\":4779:4813   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4759:4777   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4752:4814   */\n      mstore\n        /* \"#utility.yul\":4850:4857   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4830:4848   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4823:4858   */\n      mstore\n        /* \"#utility.yul\":4875:4894   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4296:4298   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4278:4299   */\n      mstore\n        /* \"#utility.yul\":4335:4337   */\n      0x24\n        /* \"#utility.yul\":4315:4333   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4308:4338   */\n      mstore\n        /* \"#utility.yul\":4374:4408   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4354:4372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4347:4409   */\n      mstore\n        /* \"#utility.yul\":4445:4451   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4425:4443   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4418:4452   */\n      mstore\n        /* \"#utility.yul\":4469:4488   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":4094:4494   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2722:2724   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2704:2725   */\n      mstore\n        /* \"#utility.yul\":2761:2763   */\n      0x22\n        /* \"#utility.yul\":2741:2759   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2734:2764   */\n      mstore\n        /* \"#utility.yul\":2800:2834   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2780:2798   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2773:2835   */\n      mstore\n        /* \"#utility.yul\":2871:2875   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2851:2869   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2844:2876   */\n      mstore\n        /* \"#utility.yul\":2893:2912   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":2520:2918   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5051:5076   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5024:5042   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10977:10994  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3125:3127   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3107:3128   */\n      mstore\n        /* \"#utility.yul\":3164:3166   */\n      0x1d\n        /* \"#utility.yul\":3144:3162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3137:3167   */\n      mstore\n        /* \"#utility.yul\":3203:3234   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3183:3201   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3176:3235   */\n      mstore\n        /* \"#utility.yul\":3252:3270   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_102\n        /* \"#utility.yul\":2923:3276   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3890:3892   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3872:3893   */\n      mstore\n        /* \"#utility.yul\":3929:3931   */\n      0x25\n        /* \"#utility.yul\":3909:3927   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3902:3932   */\n      mstore\n        /* \"#utility.yul\":3968:4002   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3948:3966   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3941:4003   */\n      mstore\n        /* \"#utility.yul\":4039:4046   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4019:4037   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4012:4047   */\n      mstore\n        /* \"#utility.yul\":4064:4083   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_102\n        /* \"#utility.yul\":3688:4089   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2318:2320   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2300:2321   */\n      mstore\n        /* \"#utility.yul\":2357:2359   */\n      0x23\n        /* \"#utility.yul\":2337:2355   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2330:2360   */\n      mstore\n        /* \"#utility.yul\":2396:2430   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2376:2394   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2369:2431   */\n      mstore\n        /* \"#utility.yul\":2467:2472   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2447:2465   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2440:2473   */\n      mstore\n        /* \"#utility.yul\":2490:2509   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_102\n        /* \"#utility.yul\":2116:2515   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3483:3485   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3465:3486   */\n      mstore\n        /* \"#utility.yul\":3522:3524   */\n      0x26\n        /* \"#utility.yul\":3502:3520   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3495:3525   */\n      mstore\n        /* \"#utility.yul\":3561:3595   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3541:3559   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3534:3596   */\n      mstore\n        /* \"#utility.yul\":3632:3640   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3630   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3605:3641   */\n      mstore\n        /* \"#utility.yul\":3658:3677   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n        /* \"#utility.yul\":3281:3683   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_137\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_90\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":5051:5076   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5039:5041   */\n      0x20\n        /* \"#utility.yul\":5024:5042   */\n      add\n      swap1\n        /* \"#utility.yul\":4905:5082   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:210   */\n    tag_144:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_146:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_46:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_148:\n        /* \"#utility.yul\":366:395   */\n      tag_149\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_144\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:666   */\n    tag_62:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:555   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:555   */\n    tag_151:\n        /* \"#utility.yul\":574:603   */\n      tag_152\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_144\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_153\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_144\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_33:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:837   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:837   */\n    tag_155:\n        /* \"#utility.yul\":856:885   */\n      tag_156\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_144\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_157\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_144\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":671:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:1258   */\n    tag_23:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1080:1086   */\n      dup1\n        /* \"#utility.yul\":1133:1135   */\n      0x40\n        /* \"#utility.yul\":1121:1130   */\n      dup4\n        /* \"#utility.yul\":1112:1119   */\n      dup6\n        /* \"#utility.yul\":1108:1131   */\n      sub\n        /* \"#utility.yul\":1104:1136   */\n      slt\n        /* \"#utility.yul\":1101:1153   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1149:1150   */\n      0x00\n        /* \"#utility.yul\":1146:1147   */\n      dup1\n        /* \"#utility.yul\":1139:1151   */\n      revert\n        /* \"#utility.yul\":1101:1153   */\n    tag_159:\n        /* \"#utility.yul\":1172:1201   */\n      tag_160\n        /* \"#utility.yul\":1191:1200   */\n      dup4\n        /* \"#utility.yul\":1172:1201   */\n      tag_144\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1162:1201   */\n      swap5\n        /* \"#utility.yul\":1248:1250   */\n      0x20\n        /* \"#utility.yul\":1233:1251   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1220:1252   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1004:1258   */\n      jump\t// out\n        /* \"#utility.yul\":1455:2111   */\n    tag_20:\n        /* \"#utility.yul\":1567:1571   */\n      0x00\n        /* \"#utility.yul\":1596:1598   */\n      0x20\n        /* \"#utility.yul\":1625:1627   */\n      dup1\n        /* \"#utility.yul\":1614:1623   */\n      dup4\n        /* \"#utility.yul\":1607:1628   */\n      mstore\n        /* \"#utility.yul\":1657:1663   */\n      dup4\n        /* \"#utility.yul\":1651:1664   */\n      mload\n        /* \"#utility.yul\":1700:1706   */\n      dup1\n        /* \"#utility.yul\":1695:1697   */\n      dup3\n        /* \"#utility.yul\":1684:1693   */\n      dup6\n        /* \"#utility.yul\":1680:1698   */\n      add\n        /* \"#utility.yul\":1673:1707   */\n      mstore\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1735:1875   */\n    tag_163:\n        /* \"#utility.yul\":1749:1755   */\n      dup2\n        /* \"#utility.yul\":1746:1747   */\n      dup2\n        /* \"#utility.yul\":1743:1756   */\n      lt\n        /* \"#utility.yul\":1735:1875   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1844:1858   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1840:1863   */\n      dup4\n      add\n        /* \"#utility.yul\":1834:1864   */\n      mload\n        /* \"#utility.yul\":1810:1827   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1829:1831   */\n      0x40\n        /* \"#utility.yul\":1806:1832   */\n      add\n        /* \"#utility.yul\":1799:1865   */\n      mstore\n        /* \"#utility.yul\":1764:1774   */\n      dup3\n      add\n        /* \"#utility.yul\":1735:1875   */\n      jump(tag_163)\n    tag_165:\n        /* \"#utility.yul\":1893:1899   */\n      dup2\n        /* \"#utility.yul\":1890:1891   */\n      dup2\n        /* \"#utility.yul\":1887:1900   */\n      gt\n        /* \"#utility.yul\":1884:1975   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1958:1960   */\n      0x40\n        /* \"#utility.yul\":1949:1955   */\n      dup4\n        /* \"#utility.yul\":1938:1947   */\n      dup8\n        /* \"#utility.yul\":1934:1956   */\n      add\n        /* \"#utility.yul\":1930:1961   */\n      add\n        /* \"#utility.yul\":1923:1965   */\n      mstore\n        /* \"#utility.yul\":1884:1975   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2027:2029   */\n      0x1f\n        /* \"#utility.yul\":2015:2030   */\n      add\n        /* \"#utility.yul\":2032:2098   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":2011:2099   */\n      and\n        /* \"#utility.yul\":1996:2100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2102:2104   */\n      0x40\n        /* \"#utility.yul\":1992:2105   */\n      add\n      swap4\n        /* \"#utility.yul\":1455:2111   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5276:5558   */\n    tag_90:\n        /* \"#utility.yul\":5316:5319   */\n      0x00\n        /* \"#utility.yul\":5347:5348   */\n      dup3\n        /* \"#utility.yul\":5343:5349   */\n      not\n        /* \"#utility.yul\":5340:5341   */\n      dup3\n        /* \"#utility.yul\":5337:5350   */\n      gt\n        /* \"#utility.yul\":5334:5527   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5383:5460   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5380:5381   */\n      0x00\n        /* \"#utility.yul\":5373:5461   */\n      mstore\n        /* \"#utility.yul\":5484:5488   */\n      0x11\n        /* \"#utility.yul\":5481:5482   */\n      0x04\n        /* \"#utility.yul\":5474:5489   */\n      mstore\n        /* \"#utility.yul\":5512:5516   */\n      0x24\n        /* \"#utility.yul\":5509:5510   */\n      0x00\n        /* \"#utility.yul\":5502:5517   */\n      revert\n        /* \"#utility.yul\":5334:5527   */\n    tag_177:\n      pop\n        /* \"#utility.yul\":5543:5552   */\n      add\n      swap1\n        /* \"#utility.yul\":5276:5558   */\n      jump\t// out\n        /* \"#utility.yul\":5563:6000   */\n    tag_67:\n        /* \"#utility.yul\":5642:5643   */\n      0x01\n        /* \"#utility.yul\":5638:5650   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5685:5697   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5706:5767   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":5760:5764   */\n      0x7f\n        /* \"#utility.yul\":5752:5758   */\n      dup3\n        /* \"#utility.yul\":5748:5765   */\n      and\n        /* \"#utility.yul\":5738:5765   */\n      swap2\n      pop\n        /* \"#utility.yul\":5706:5767   */\n    tag_179:\n        /* \"#utility.yul\":5813:5815   */\n      0x20\n        /* \"#utility.yul\":5805:5811   */\n      dup3\n        /* \"#utility.yul\":5802:5816   */\n      lt\n        /* \"#utility.yul\":5782:5800   */\n      dup2\n        /* \"#utility.yul\":5779:5817   */\n      eq\n        /* \"#utility.yul\":5776:5994   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5850:5927   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5847:5848   */\n      0x00\n        /* \"#utility.yul\":5840:5928   */\n      mstore\n        /* \"#utility.yul\":5951:5955   */\n      0x22\n        /* \"#utility.yul\":5948:5949   */\n      0x04\n        /* \"#utility.yul\":5941:5956   */\n      mstore\n        /* \"#utility.yul\":5979:5983   */\n      0x24\n        /* \"#utility.yul\":5976:5977   */\n      0x00\n        /* \"#utility.yul\":5969:5984   */\n      revert\n        /* \"#utility.yul\":5776:5994   */\n    tag_180:\n      pop\n        /* \"#utility.yul\":5563:6000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220acfbe2f324699da599c8253edaa4d48303f73427746a245e67cc63e8fc05babb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:8"
															},
															"nodeType": "YulIf",
															"src": "88:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:8"
															},
															"nodeType": "YulIf",
															"src": "221:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:8"
															},
															"nodeType": "YulIf",
															"src": "404:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:8"
															},
															"nodeType": "YulIf",
															"src": "566:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:8",
																"statements": []
															},
															"src": "647:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:8"
															},
															"nodeType": "YulIf",
															"src": "789:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:8",
														"type": ""
													}
												],
												"src": "14:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:8"
															},
															"nodeType": "YulIf",
															"src": "1032:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:8"
															},
															"nodeType": "YulIf",
															"src": "1169:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:8"
															},
															"nodeType": "YulIf",
															"src": "1342:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:8",
														"type": ""
													}
												],
												"src": "904:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:8"
															},
															"nodeType": "YulIf",
															"src": "1614:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:8"
															},
															"nodeType": "YulIf",
															"src": "1684:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:8",
														"type": ""
													}
												],
												"src": "1471:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000dfc38038062000dfc8339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610b6a80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610a2e565b60405180910390f35b6100ff6100fa366004610a04565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046109c8565b6102aa565b604051601281526020016100e3565b6100ff610151366004610a04565b6102ce565b610113610164366004610973565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031a565b6100ff6101a2366004610a04565b610329565b6100ff6101b5366004610a04565b6103ff565b6101136101c8366004610995565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610ae0565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610ae0565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040d565b5060019392505050565b6000336102b88582856105c0565b6102c3858585610697565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610315908790610aa1565b61040d565b60606004805461020f90610ae0565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c3828686840361040d565b6000336102a0818585610697565b73ffffffffffffffffffffffffffffffffffffffff83166104af576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff8216610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106915781811015610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e9565b610691848484840361040d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff82166107dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d7908490610aa1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093d91815260200190565b60405180910390a3610691565b803573ffffffffffffffffffffffffffffffffffffffff8116811461096e57600080fd5b919050565b60006020828403121561098557600080fd5b61098e8261094a565b9392505050565b600080604083850312156109a857600080fd5b6109b18361094a565b91506109bf6020840161094a565b90509250929050565b6000806000606084860312156109dd57600080fd5b6109e68461094a565b92506109f46020850161094a565b9150604084013590509250925092565b60008060408385031215610a1757600080fd5b610a208361094a565b946020939093013593505050565b600060208083528351808285015260005b81811015610a5b57858101830151858201604001528201610a3f565b81811115610a6d576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610adb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600181811c90821680610af457607f821691505b60208210811415610b2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220acfbe2f324699da599c8253edaa4d48303f73427746a245e67cc63e8fc05babb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDFC CODESIZE SUB DUP1 PUSH3 0xDFC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB6A DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x973 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31A JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xAE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xAE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2B8 DUP6 DUP3 DUP6 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x2C3 DUP6 DUP6 DUP6 PUSH2 0x697 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x315 SWAP1 DUP8 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xAE0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x697 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x691 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x691 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D7 SWAP1 DUP5 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x691 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98E DUP3 PUSH2 0x94A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B1 DUP4 PUSH2 0x94A JUMP JUMPDEST SWAP2 POP PUSH2 0x9BF PUSH1 0x20 DUP5 ADD PUSH2 0x94A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E6 DUP5 PUSH2 0x94A JUMP JUMPDEST SWAP3 POP PUSH2 0x9F4 PUSH1 0x20 DUP6 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA20 DUP4 PUSH2 0x94A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA3F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xADB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAF4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB2E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xFB 0xE2 RETURN 0x24 PUSH10 0x9DA599C8253EDAA4D483 SUB 0xF7 CALLVALUE 0x27 PUSH21 0x6A245E67CC63E8FC05BABB64736F6C634300080700 CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11214:0;;;-1:-1:-1;1403:11214:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:8;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:8;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:8;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:8:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:8;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1403:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 1037,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1472,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1687,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 658,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 809,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 718,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 512,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 794,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 682,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 1023,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6002:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:8"
															},
															"nodeType": "YulIf",
															"src": "111:93:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:196:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:8"
															},
															"nodeType": "YulIf",
															"src": "295:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:8",
														"type": ""
													}
												],
												"src": "215:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:8"
															},
															"nodeType": "YulIf",
															"src": "503:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:8",
														"type": ""
													}
												],
												"src": "406:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:8"
															},
															"nodeType": "YulIf",
															"src": "785:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:8",
														"type": ""
													}
												],
												"src": "671:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1112:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1133:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:32:8"
															},
															"nodeType": "YulIf",
															"src": "1101:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1191:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1172:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1210:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1220:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1049:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1060:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1072:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1080:6:8",
														"type": ""
													}
												],
												"src": "1004:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1358:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1368:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1368:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1428:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1421:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1327:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1338:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1349:4:8",
														"type": ""
													}
												],
												"src": "1263:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:535:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1586:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1596:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1590:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1614:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1637:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1657:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1641:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1695:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1716:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1725:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1720:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1814:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1825:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1810:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1810:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1829:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1806:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1806:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1848:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1856:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1844:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1844:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1860:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1840:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1840:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1834:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1834:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1743:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1757:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1759:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1768:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1771:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1764:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1764:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1759:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1739:3:8",
																"statements": []
															},
															"src": "1735:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1909:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1938:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1949:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1934:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1934:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1958:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1930:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1930:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1923:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1923:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1890:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1893:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1887:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:13:8"
															},
															"nodeType": "YulIf",
															"src": "1884:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:121:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2019:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2027:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2015:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2015:15:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2032:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2011:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2011:88:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:104:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:113:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1984:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1545:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1567:4:8",
														"type": ""
													}
												],
												"src": "1455:656:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2290:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2307:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2300:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2341:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2352:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2380:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2391:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2376:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2396:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2369:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2369:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2451:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2467:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2440:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2440:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2482:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2505:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2482:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2267:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2281:4:8",
														"type": ""
													}
												],
												"src": "2116:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2711:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2722:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2704:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2704:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2745:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2756:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2741:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2741:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2761:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2734:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2784:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2795:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2800:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2871:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2897:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2908:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2671:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2685:4:8",
														"type": ""
													}
												],
												"src": "2520:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3097:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3114:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3125:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3107:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3107:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3137:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3137:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3187:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3198:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3183:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3183:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3203:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3176:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3176:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3244:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3256:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3252:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3244:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3074:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3088:4:8",
														"type": ""
													}
												],
												"src": "2923:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3483:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3465:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3506:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3517:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3502:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3502:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3545:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3556:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3541:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3541:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3561:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3534:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3534:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3534:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3627:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3612:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3632:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3605:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3650:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3662:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3658:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3650:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3432:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3446:4:8",
														"type": ""
													}
												],
												"src": "3281:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3862:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3872:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3913:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3924:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3909:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3902:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3952:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3963:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3948:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3948:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3968:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3941:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3941:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4034:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4039:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4012:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4056:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4068:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4056:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3839:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3853:4:8",
														"type": ""
													}
												],
												"src": "3688:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4268:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4285:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4296:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4278:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4330:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4315:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4315:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4308:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4308:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4358:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4369:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4354:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4354:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4374:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4347:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4429:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4440:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4425:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4425:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4445:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4461:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4473:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4484:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4469:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4469:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4461:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4245:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4259:4:8",
														"type": ""
													}
												],
												"src": "4094:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4673:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4690:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4683:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4724:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4735:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4720:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4720:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4713:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4713:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4763:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4774:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4759:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4759:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4779:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4752:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4834:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4845:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4830:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4850:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4823:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4867:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4890:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4867:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4650:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4664:4:8",
														"type": ""
													}
												],
												"src": "4499:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5006:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5016:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5028:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5016:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5058:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5069:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5051:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4975:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4986:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4997:4:8",
														"type": ""
													}
												],
												"src": "4905:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5184:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5194:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5202:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5194:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5236:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5251:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5247:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5229:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5229:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5153:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5164:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5175:4:8",
														"type": ""
													}
												],
												"src": "5087:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5324:234:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5359:168:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5380:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5383:77:8",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5373:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5373:88:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5373:88:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5481:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5484:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5474:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5474:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5474:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5509:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5512:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5502:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5502:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5502:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5340:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5347:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5343:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5337:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:13:8"
															},
															"nodeType": "YulIf",
															"src": "5334:193:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5536:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5547:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5550:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5536:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5307:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5310:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5316:3:8",
														"type": ""
													}
												],
												"src": "5276:282:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5618:382:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5628:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5645:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5659:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5689:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5695:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5663:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5736:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5738:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5752:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5760:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5748:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5748:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5738:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5716:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5709:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5709:26:8"
															},
															"nodeType": "YulIf",
															"src": "5706:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5826:168:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5847:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5850:77:8",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5840:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5840:88:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5840:88:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5948:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5951:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5941:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5941:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5941:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5976:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5979:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5969:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5782:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5805:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5813:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5802:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5802:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5779:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:38:8"
															},
															"nodeType": "YulIf",
															"src": "5776:218:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5598:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5607:6:8",
														"type": ""
													}
												],
												"src": "5563:437:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610a2e565b60405180910390f35b6100ff6100fa366004610a04565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046109c8565b6102aa565b604051601281526020016100e3565b6100ff610151366004610a04565b6102ce565b610113610164366004610973565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031a565b6100ff6101a2366004610a04565b610329565b6100ff6101b5366004610a04565b6103ff565b6101136101c8366004610995565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610ae0565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610ae0565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040d565b5060019392505050565b6000336102b88582856105c0565b6102c3858585610697565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610315908790610aa1565b61040d565b60606004805461020f90610ae0565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c3828686840361040d565b6000336102a0818585610697565b73ffffffffffffffffffffffffffffffffffffffff83166104af576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff8216610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106915781811015610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e9565b610691848484840361040d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff82166107dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d7908490610aa1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093d91815260200190565b60405180910390a3610691565b803573ffffffffffffffffffffffffffffffffffffffff8116811461096e57600080fd5b919050565b60006020828403121561098557600080fd5b61098e8261094a565b9392505050565b600080604083850312156109a857600080fd5b6109b18361094a565b91506109bf6020840161094a565b90509250929050565b6000806000606084860312156109dd57600080fd5b6109e68461094a565b92506109f46020850161094a565b9150604084013590509250925092565b60008060408385031215610a1757600080fd5b610a208361094a565b946020939093013593505050565b600060208083528351808285015260005b81811015610a5b57858101830151858201604001528201610a3f565b81811115610a6d576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610adb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600181811c90821680610af457607f821691505b60208210811415610b2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220acfbe2f324699da599c8253edaa4d48303f73427746a245e67cc63e8fc05babb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x9C8 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x973 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31A JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xAE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xAE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2B8 DUP6 DUP3 DUP6 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x2C3 DUP6 DUP6 DUP6 PUSH2 0x697 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x315 SWAP1 DUP8 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xAE0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40D JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x697 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x691 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x691 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D7 SWAP1 DUP5 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x691 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98E DUP3 PUSH2 0x94A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B1 DUP4 PUSH2 0x94A JUMP JUMPDEST SWAP2 POP PUSH2 0x9BF PUSH1 0x20 DUP5 ADD PUSH2 0x94A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E6 DUP5 PUSH2 0x94A JUMP JUMPDEST SWAP3 POP PUSH2 0x9F4 PUSH1 0x20 DUP6 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA20 DUP4 PUSH2 0x94A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA3F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xADB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAF4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB2E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xFB 0xE2 RETURN 0x24 PUSH10 0x9DA599C8253EDAA4D483 SUB 0xF7 CALLVALUE 0x27 PUSH21 0x6A245E67CC63E8FC05BABB64736F6C634300080700 CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1428:14:8;;1421:22;1403:41;;1391:2;1376:18;4433:197:0;1263:187:8;3244:106:0;3331:12;;3244:106;;;5051:25:8;;;5039:2;5024:18;3244:106:0;4905:177:8;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5229:36:8;;5217:2;5202:18;3093:91:0;5087:184:8;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;3508:18;;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;4091:18;;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:5;4570:32:0;719:10:5;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:5;5375:38:0;5391:4;719:10:5;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;719:10:5;5961:4:0;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5961:4;;719:10:5;6015:64:0;;719:10:5;;4091:27:0;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:5;6687:4:0;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6687:4;;719:10:5;6831:15:0;6811:16;:35;;6803:85;;;;;;;4701:2:8;6803:85:0;;;4683:21:8;4740:2;4720:18;;;4713:30;4779:34;4759:18;;;4752:62;4850:7;4830:18;;;4823:35;4875:19;;6803:85:0;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:5;3862:28:0;719:10:5;3879:2:0;3883:6;3862:9;:28::i;10110:370::-;10241:19;;;10233:68;;;;;;;4296:2:8;10233:68:0;;;4278:21:8;4335:2;4315:18;;;4308:30;4374:34;4354:18;;;4347:62;4445:6;4425:18;;;4418:34;4469:19;;10233:68:0;4094:400:8;10233:68:0;10319:21;;;10311:68;;;;;;;2722:2:8;10311:68:0;;;2704:21:8;2761:2;2741:18;;;2734:30;2800:34;2780:18;;;2773:62;2871:4;2851:18;;;2844:32;2893:19;;10311:68:0;2520:398:8;10311:68:0;10390:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;5051:25:8;;;10441:32:0;;5024:18:8;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;4091:18;;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10977:17;10957:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;3125:2:8;11010:68:0;;;3107:21:8;3164:2;3144:18;;;3137:30;3203:31;3183:18;;;3176:59;3252:18;;11010:68:0;2923:353:8;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;7601:18;;;7593:68;;;;;;;3890:2:8;7593:68:0;;;3872:21:8;3929:2;3909:18;;;3902:30;3968:34;3948:18;;;3941:62;4039:7;4019:18;;;4012:35;4064:19;;7593:68:0;3688:401:8;7593:68:0;7679:16;;;7671:64;;;;;;;2318:2:8;7671:64:0;;;2300:21:8;2357:2;2337:18;;;2330:30;2396:34;2376:18;;;2369:62;2467:5;2447:18;;;2440:33;2490:19;;7671:64:0;2116:399:8;7671:64:0;7817:15;;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;;;;3483:2:8;7842:72:0;;;3465:21:8;3522:2;3502:18;;;3495:30;3561:34;3541:18;;;3534:62;3632:8;3612:18;;;3605:36;3658:19;;7842:72:0;3281:402:8;7842:72:0;7948:15;;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;5051:25:8;;5039:2;5024:18;;4905:177;8045:26:0;;;;;;;;8082:37;11786:121;14:196:8;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:8:o;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:52;;;551:1;548;541:12;503:52;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;406:260;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;671:328;;;;;:::o;1004:254::-;1072:6;1080;1133:2;1121:9;1112:7;1108:23;1104:32;1101:52;;;1149:1;1146;1139:12;1101:52;1172:29;1191:9;1172:29;:::i;:::-;1162:39;1248:2;1233:18;;;;1220:32;;-1:-1:-1;;;1004:254:8:o;1455:656::-;1567:4;1596:2;1625;1614:9;1607:21;1657:6;1651:13;1700:6;1695:2;1684:9;1680:18;1673:34;1725:1;1735:140;1749:6;1746:1;1743:13;1735:140;;;1844:14;;;1840:23;;1834:30;1810:17;;;1829:2;1806:26;1799:66;1764:10;;1735:140;;;1893:6;1890:1;1887:13;1884:91;;;1963:1;1958:2;1949:6;1938:9;1934:22;1930:31;1923:42;1884:91;-1:-1:-1;2027:2:8;2015:15;2032:66;2011:88;1996:104;;;;2102:2;1992:113;;1455:656;-1:-1:-1;;;1455:656:8:o;5276:282::-;5316:3;5347:1;5343:6;5340:1;5337:13;5334:193;;;5383:77;5380:1;5373:88;5484:4;5481:1;5474:15;5512:4;5509:1;5502:15;5334:193;-1:-1:-1;5543:9:8;;5276:282::o;5563:437::-;5642:1;5638:12;;;;5685;;;5706:61;;5760:4;5752:6;5748:17;5738:27;;5706:61;5813:2;5805:6;5802:14;5782:18;5779:38;5776:218;;;5850:77;5847:1;5840:88;5951:4;5948:1;5941:15;5979:4;5976:1;5969:15;5776:218;;5563:437;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "584400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24599",
								"balanceOf(address)": "2561",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "26862",
								"increaseAllowance(address,uint256)": "26908",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2304",
								"transfer(address,uint256)": "51142",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220acfbe2f324699da599c8253edaa4d48303f73427746a245e67cc63e8fc05babb64736f6c63430008070033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1443,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1263,
											"end": 1450,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4905,
											"end": 5082,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5229,
											"end": 5265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5265,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5217,
											"end": 5219,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5087,
											"end": 5271,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 4743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4813,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4759,
											"end": 4777,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4850,
											"end": 4857,
											"name": "PUSH",
											"source": 8,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4875,
											"end": 4894,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4875,
											"end": 4894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4278,
											"end": 4299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4335,
											"end": 4337,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4308,
											"end": 4338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4374,
											"end": 4408,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4409,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "PUSH",
											"source": 8,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4452,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4469,
											"end": 4488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4094,
											"end": 4494,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2800,
											"end": 2834,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2912,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2893,
											"end": 2912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2520,
											"end": 2918,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3127,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3166,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3234,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3252,
											"end": 3270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2923,
											"end": 3276,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3948,
											"end": 3966,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3948,
											"end": 3966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 4003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4039,
											"end": 4046,
											"name": "PUSH",
											"source": 8,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4012,
											"end": 4047,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4064,
											"end": 4083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3688,
											"end": 4089,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2359,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2430,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2509,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2490,
											"end": 2509,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2116,
											"end": 2515,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3524,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3495,
											"end": 3525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3534,
											"end": 3596,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3632,
											"end": 3640,
											"name": "PUSH",
											"source": 8,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3605,
											"end": 3641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3658,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3281,
											"end": 3683,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 5082,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 555,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 503,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 555,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 785,
											"end": 837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 785,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 785,
											"end": 837,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1130,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1104,
											"end": 1136,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1151,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1101,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 2111,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1831,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1884,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2098,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 2011,
											"end": 2099,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2100,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2100,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1996,
											"end": 2100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2105,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1455,
											"end": 2111,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 2111,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5276,
											"end": 5558,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 5276,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5316,
											"end": 5319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5349,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5350,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5527,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5334,
											"end": 5527,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5460,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5380,
											"end": 5381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5461,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5481,
											"end": 5482,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5474,
											"end": 5489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5512,
											"end": 5516,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5517,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 5334,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5558,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5563,
											"end": 6000,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5563,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5706,
											"end": 5767,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5764,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 5752,
											"end": 5758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5765,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5767,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5706,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5816,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5776,
											"end": 5994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5850,
											"end": 5927,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5948,
											"end": 5949,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5983,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5994,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5776,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 6000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5563,
											"end": 6000,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Fundraising.sol": {
				"Fundraising": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_dataAccessThreshold",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "coinAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountUntilReachTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coin",
							"outputs": [
								{
									"internalType": "contract IERC20Extented",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dataAccessThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "invest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "killed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "projectMarketplace",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeemNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawInvestment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Fundraising.sol\":1260:4482  contract Fundraising is ERC20 {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Fundraising.sol\":1702:1728  bool public paused = false */\n  0x09\n  dup1\n  sload\n  not(0xffff)\n    /* \"contracts/Fundraising.sol\":1735:1761  bool public killed = false */\n  and\n  swap1\n  sstore\n    /* \"contracts/Fundraising.sol\":1787:2152  constructor(uint256 amount, string memory name, string memory symbol, uint256 _dataAccessThreshold, address _admin, address coinAddress) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup5\n  mload\n    /* \"contracts/Fundraising.sol\":1930:1934  name */\n  dup6\n  swap1\n    /* \"contracts/Fundraising.sol\":1936:1942  symbol */\n  dup6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_7\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n  pop\n    /* \"contracts/Fundraising.sol\":1954:1966  targetAmount */\n  0x06\n    /* \"contracts/Fundraising.sol\":1954:1975  targetAmount = amount */\n  swap6\n  swap1\n  swap6\n  sstore\n    /* \"contracts/Fundraising.sol\":1985:2004  dataAccessThreshold */\n  0x08\n    /* \"contracts/Fundraising.sol\":1985:2027  dataAccessThreshold = _dataAccessThreshold */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Fundraising.sol\":2037:2042  admin */\n  0x09\n    /* \"contracts/Fundraising.sol\":2037:2051  admin = _admin */\n  dup1\n  sload\n  not(sub(shl(0xb0, 0x01), 0x010000))\n  and\n  0x010000\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  mul\n  or\n  swap1\n  sstore\n    /* \"contracts/Fundraising.sol\":2061:2065  coin */\n  0x05\n    /* \"contracts/Fundraising.sol\":2061:2095  coin = IERC20Extented(coinAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap2\n  swap1\n  swap5\n  and\n  or\n  swap1\n  swap3\n  sstore\n  pop\n  pop\n    /* \"contracts/Fundraising.sol\":2134:2144  msg.sender */\n  caller\n    /* \"contracts/Fundraising.sol\":2105:2145  projectMarketplace = IERC721(msg.sender) */\n  0x60\n  shl\n  0x80\n  mstore\n    /* \"contracts/Fundraising.sol\":1260:4482  contract Fundraising is ERC20 {... */\n  jump(tag_23)\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:191   */\ntag_24:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_26:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:1081   */\ntag_27:\n    /* \"#utility.yul\":250:255   */\n  0x00\n    /* \"#utility.yul\":303:306   */\n  dup3\n    /* \"#utility.yul\":296:300   */\n  0x1f\n    /* \"#utility.yul\":288:294   */\n  dup4\n    /* \"#utility.yul\":284:301   */\n  add\n    /* \"#utility.yul\":280:307   */\n  slt\n    /* \"#utility.yul\":270:325   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":321:322   */\n  0x00\n    /* \"#utility.yul\":318:319   */\n  dup1\n    /* \"#utility.yul\":311:323   */\n  revert\n    /* \"#utility.yul\":270:325   */\ntag_29:\n    /* \"#utility.yul\":344:357   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":406:416   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":403:439   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":419:437   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":494:496   */\n  0x40\n    /* \"#utility.yul\":488:497   */\n  mload\n    /* \"#utility.yul\":462:464   */\n  0x1f\n    /* \"#utility.yul\":548:561   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":544:566   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":568:570   */\n  0x3f\n    /* \"#utility.yul\":540:571   */\n  add\n    /* \"#utility.yul\":536:576   */\n  and\n    /* \"#utility.yul\":524:577   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":592:610   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":612:634   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":589:635   */\n  or\n    /* \"#utility.yul\":586:658   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":638:656   */\n  tag_34\n  tag_32\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":678:688   */\n  dup2\n    /* \"#utility.yul\":674:676   */\n  0x40\n    /* \"#utility.yul\":667:689   */\n  mstore\n    /* \"#utility.yul\":713:715   */\n  dup4\n    /* \"#utility.yul\":705:711   */\n  dup2\n    /* \"#utility.yul\":698:716   */\n  mstore\n    /* \"#utility.yul\":735:739   */\n  0x20\n    /* \"#utility.yul\":725:739   */\n  swap3\n  pop\n    /* \"#utility.yul\":780:783   */\n  dup7\n    /* \"#utility.yul\":775:777   */\n  dup4\n    /* \"#utility.yul\":770:772   */\n  dup6\n    /* \"#utility.yul\":762:768   */\n  dup9\n    /* \"#utility.yul\":758:773   */\n  add\n    /* \"#utility.yul\":754:778   */\n  add\n    /* \"#utility.yul\":751:784   */\n  gt\n    /* \"#utility.yul\":748:801   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":794:795   */\n  dup1\n    /* \"#utility.yul\":787:799   */\n  revert\n    /* \"#utility.yul\":748:801   */\ntag_35:\n    /* \"#utility.yul\":819:820   */\n  0x00\n    /* \"#utility.yul\":810:820   */\n  swap2\n  pop\n    /* \"#utility.yul\":829:962   */\ntag_36:\n    /* \"#utility.yul\":843:845   */\n  dup4\n    /* \"#utility.yul\":840:841   */\n  dup3\n    /* \"#utility.yul\":837:846   */\n  lt\n    /* \"#utility.yul\":829:962   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":931:945   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":927:950   */\n  dup4\n  add\n    /* \"#utility.yul\":921:951   */\n  mload\n    /* \"#utility.yul\":900:914   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":896:919   */\n  dup5\n  add\n    /* \"#utility.yul\":889:952   */\n  mstore\n    /* \"#utility.yul\":854:864   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":829:962   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":980:982   */\n  dup4\n    /* \"#utility.yul\":977:978   */\n  dup3\n    /* \"#utility.yul\":974:983   */\n  gt\n    /* \"#utility.yul\":971:1051   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1039:1040   */\n  0x00\n    /* \"#utility.yul\":1034:1036   */\n  dup4\n    /* \"#utility.yul\":1029:1031   */\n  dup6\n    /* \"#utility.yul\":1021:1027   */\n  dup4\n    /* \"#utility.yul\":1017:1032   */\n  add\n    /* \"#utility.yul\":1013:1037   */\n  add\n    /* \"#utility.yul\":1006:1041   */\n  mstore\n    /* \"#utility.yul\":971:1051   */\ntag_39:\n    /* \"#utility.yul\":1069:1075   */\n  swap7\n    /* \"#utility.yul\":196:1081   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1086:1943   */\ntag_3:\n    /* \"#utility.yul\":1221:1227   */\n  0x00\n    /* \"#utility.yul\":1229:1235   */\n  dup1\n    /* \"#utility.yul\":1237:1243   */\n  0x00\n    /* \"#utility.yul\":1245:1251   */\n  dup1\n    /* \"#utility.yul\":1253:1259   */\n  0x00\n    /* \"#utility.yul\":1261:1267   */\n  dup1\n    /* \"#utility.yul\":1314:1317   */\n  0xc0\n    /* \"#utility.yul\":1302:1311   */\n  dup8\n    /* \"#utility.yul\":1293:1300   */\n  dup10\n    /* \"#utility.yul\":1289:1312   */\n  sub\n    /* \"#utility.yul\":1285:1318   */\n  slt\n    /* \"#utility.yul\":1282:1335   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1282:1335   */\ntag_41:\n    /* \"#utility.yul\":1354:1370   */\n  dup7\n  mload\n    /* \"#utility.yul\":1414:1416   */\n  0x20\n    /* \"#utility.yul\":1399:1417   */\n  dup9\n  add\n    /* \"#utility.yul\":1393:1418   */\n  mload\n    /* \"#utility.yul\":1354:1370   */\n  swap1\n  swap7\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1467:1481   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1464:1498   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1494:1495   */\n  0x00\n    /* \"#utility.yul\":1491:1492   */\n  dup1\n    /* \"#utility.yul\":1484:1496   */\n  revert\n    /* \"#utility.yul\":1464:1498   */\ntag_42:\n    /* \"#utility.yul\":1517:1578   */\n  tag_43\n    /* \"#utility.yul\":1570:1577   */\n  dup11\n    /* \"#utility.yul\":1561:1567   */\n  dup4\n    /* \"#utility.yul\":1550:1559   */\n  dup12\n    /* \"#utility.yul\":1546:1568   */\n  add\n    /* \"#utility.yul\":1517:1578   */\n  tag_27\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1507:1578   */\n  swap7\n  pop\n    /* \"#utility.yul\":1624:1626   */\n  0x40\n    /* \"#utility.yul\":1613:1622   */\n  dup10\n    /* \"#utility.yul\":1609:1627   */\n  add\n    /* \"#utility.yul\":1603:1628   */\n  mload\n    /* \"#utility.yul\":1587:1628   */\n  swap2\n  pop\n    /* \"#utility.yul\":1653:1655   */\n  dup1\n    /* \"#utility.yul\":1643:1651   */\n  dup3\n    /* \"#utility.yul\":1640:1656   */\n  gt\n    /* \"#utility.yul\":1637:1673   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1666:1667   */\n  dup1\n    /* \"#utility.yul\":1659:1671   */\n  revert\n    /* \"#utility.yul\":1637:1673   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1692:1755   */\n  tag_45\n    /* \"#utility.yul\":1747:1754   */\n  dup10\n    /* \"#utility.yul\":1736:1744   */\n  dup3\n    /* \"#utility.yul\":1725:1734   */\n  dup11\n    /* \"#utility.yul\":1721:1745   */\n  add\n    /* \"#utility.yul\":1692:1755   */\n  tag_27\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1682:1755   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":1795:1797   */\n  0x60\n    /* \"#utility.yul\":1784:1793   */\n  dup8\n    /* \"#utility.yul\":1780:1798   */\n  add\n    /* \"#utility.yul\":1774:1799   */\n  mload\n    /* \"#utility.yul\":1764:1799   */\n  swap3\n  pop\n    /* \"#utility.yul\":1818:1868   */\n  tag_46\n    /* \"#utility.yul\":1863:1866   */\n  0x80\n    /* \"#utility.yul\":1852:1861   */\n  dup9\n    /* \"#utility.yul\":1848:1867   */\n  add\n    /* \"#utility.yul\":1818:1868   */\n  tag_24\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1808:1868   */\n  swap2\n  pop\n    /* \"#utility.yul\":1887:1937   */\n  tag_47\n    /* \"#utility.yul\":1932:1935   */\n  0xa0\n    /* \"#utility.yul\":1921:1930   */\n  dup9\n    /* \"#utility.yul\":1917:1936   */\n  add\n    /* \"#utility.yul\":1887:1937   */\n  tag_24\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1877:1937   */\n  swap1\n  pop\n    /* \"#utility.yul\":1086:1943   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":1948:2328   */\ntag_13:\n    /* \"#utility.yul\":2027:2028   */\n  0x01\n    /* \"#utility.yul\":2023:2035   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2070:2082   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2091:2152   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2145:2149   */\n  0x7f\n    /* \"#utility.yul\":2137:2143   */\n  dup3\n    /* \"#utility.yul\":2133:2150   */\n  and\n    /* \"#utility.yul\":2123:2150   */\n  swap2\n  pop\n    /* \"#utility.yul\":2091:2152   */\ntag_49:\n    /* \"#utility.yul\":2198:2200   */\n  0x20\n    /* \"#utility.yul\":2190:2196   */\n  dup3\n    /* \"#utility.yul\":2187:2201   */\n  lt\n    /* \"#utility.yul\":2167:2185   */\n  dup2\n    /* \"#utility.yul\":2164:2202   */\n  eq\n    /* \"#utility.yul\":2161:2322   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2244:2254   */\n  0x4e487b71\n    /* \"#utility.yul\":2239:2242   */\n  0xe0\n    /* \"#utility.yul\":2235:2255   */\n  shl\n    /* \"#utility.yul\":2232:2233   */\n  0x00\n    /* \"#utility.yul\":2225:2256   */\n  mstore\n    /* \"#utility.yul\":2279:2283   */\n  0x22\n    /* \"#utility.yul\":2276:2277   */\n  0x04\n    /* \"#utility.yul\":2269:2284   */\n  mstore\n    /* \"#utility.yul\":2307:2311   */\n  0x24\n    /* \"#utility.yul\":2304:2305   */\n  0x00\n    /* \"#utility.yul\":2297:2312   */\n  revert\n    /* \"#utility.yul\":2161:2322   */\ntag_50:\n  pop\n    /* \"#utility.yul\":1948:2328   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2333:2460   */\ntag_32:\n    /* \"#utility.yul\":2394:2404   */\n  0x4e487b71\n    /* \"#utility.yul\":2389:2392   */\n  0xe0\n    /* \"#utility.yul\":2385:2405   */\n  shl\n    /* \"#utility.yul\":2382:2383   */\n  0x00\n    /* \"#utility.yul\":2375:2406   */\n  mstore\n    /* \"#utility.yul\":2425:2429   */\n  0x41\n    /* \"#utility.yul\":2422:2423   */\n  0x04\n    /* \"#utility.yul\":2415:2430   */\n  mstore\n    /* \"#utility.yul\":2449:2453   */\n  0x24\n    /* \"#utility.yul\":2446:2447   */\n  0x00\n    /* \"#utility.yul\":2439:2454   */\n  revert\n    /* \"#utility.yul\":2333:2460   */\ntag_23:\n    /* \"contracts/Fundraising.sol\":1260:4482  contract Fundraising is ERC20 {... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Fundraising.sol\":1260:4482  contract Fundraising is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41c0e1b5\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x8456cb59\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbdf89682\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x953b8fb8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x77262d38\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x77262d38\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7b3e5e7b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7e0d73d4\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x41c0e1b5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x1f3a0e41\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x2afcf480\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x2afcf480\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x1f3a0e41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2037fcbf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x11df9995\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x11df9995\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06febe00\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Fundraising.sol\":1577:1611  uint256 public dataAccessThreshold */\n    tag_4:\n      tag_39\n      sload(0x08)\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":11695:11720   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":11683:11685   */\n      0x20\n        /* \"#utility.yul\":11668:11686   */\n      add\n        /* \"contracts/Fundraising.sol\":1577:1611  uint256 public dataAccessThreshold */\n      tag_37\n        /* \"#utility.yul\":11549:11726   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":3691:3705   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3684:3706   */\n      iszero\n        /* \"#utility.yul\":3666:3707   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3654:3656   */\n      0x20\n        /* \"#utility.yul\":3639:3657   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_37\n        /* \"#utility.yul\":3526:3713   */\n      jump\n        /* \"contracts/Fundraising.sol\":1296:1322  IERC20Extented public coin */\n    tag_6:\n      sload(0x05)\n      tag_49\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":4169:4211   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4157:4212   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4139:4213   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4127:4129   */\n      0x20\n        /* \"#utility.yul\":4112:4130   */\n      add\n        /* \"contracts/Fundraising.sol\":1296:1322  IERC20Extented public coin */\n      tag_37\n        /* \"#utility.yul\":3971:4219   */\n      jump\n        /* \"contracts/Fundraising.sol\":2459:2624  function onERC721Received(address, address, uint256, bytes calldata) external pure returns (bytes4) {... */\n    tag_7:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/Fundraising.sol\":2576:2617  IERC721Receiver.onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Fundraising.sol\":2459:2624  function onERC721Received(address, address, uint256, bytes calldata) external pure returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":3892:3958   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3880:3959   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3862:3960   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3850:3852   */\n      0x20\n        /* \"#utility.yul\":3835:3853   */\n      add\n        /* \"contracts/Fundraising.sol\":2459:2624  function onERC721Received(address, address, uint256, bytes calldata) external pure returns (bytes4) {... */\n      tag_37\n        /* \"#utility.yul\":3718:3966   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_39)\n        /* \"contracts/Fundraising.sol\":1735:1761  bool public killed = false */\n    tag_9:\n      sload(0x09)\n      tag_43\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Fundraising.sol\":3678:4086  function withdrawInvestment(uint256 value) external {... */\n    tag_10:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_11:\n      tag_43\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":3040:3575  function invest(uint256 value) external {... */\n    tag_12:\n      tag_65\n      tag_75\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":2158:2262  function decimals() public view virtual override returns (uint8) {... */\n    tag_13:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n        /* \"#utility.yul\":11903:11907   */\n      0xff\n        /* \"#utility.yul\":11891:11908   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11873:11909   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11861:11863   */\n      0x20\n        /* \"#utility.yul\":11846:11864   */\n      add\n        /* \"contracts/Fundraising.sol\":2158:2262  function decimals() public view virtual override returns (uint8) {... */\n      tag_37\n        /* \"#utility.yul\":11731:11915   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_43\n      tag_82\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":2790:2855  function kill() onlyOwner external {... */\n    tag_15:\n      tag_65\n      tag_86\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":1702:1728  bool public paused = false */\n    tag_16:\n      sload(0x09)\n      tag_43\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_39\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/Fundraising.sol\":4204:4480  function redeemNFT() external {... */\n    tag_18:\n      tag_65\n      tag_96\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":1544:1571  uint256 public amountRaised */\n    tag_19:\n      tag_39\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Fundraising.sol\":1388:1431  IERC721 public immutable projectMarketplace */\n    tag_20:\n      tag_49\n      immutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n      dup2\n      jump\n        /* \"contracts/Fundraising.sol\":2630:2784  function pause() onlyOwner external {... */\n    tag_21:\n      tag_65\n      tag_105\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":1511:1538  uint256 public targetAmount */\n    tag_22:\n      tag_39\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_23:\n      tag_35\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_24:\n      tag_43\n      tag_113\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n      tag_43\n      tag_117\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":2861:2978  function amountUntilReachTarget() public view returns (uint256){... */\n    tag_26:\n      tag_39\n      tag_121\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_27:\n      tag_39\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Fundraising.sol\":3678:4086  function withdrawInvestment(uint256 value) external {... */\n    tag_68:\n        /* \"contracts/Fundraising.sol\":3765:3777  targetAmount */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Fundraising.sol\":3749:3777  totalSupply() < targetAmount */\n      lt\n        /* \"contracts/Fundraising.sol\":3740:3805  require( totalSupply() < targetAmount , \"Target Already Raised\" ) */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8711:8713   */\n      0x20\n        /* \"contracts/Fundraising.sol\":3740:3805  require( totalSupply() < targetAmount , \"Target Already Raised\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8693:8714   */\n      mstore\n        /* \"#utility.yul\":8750:8752   */\n      0x15\n        /* \"#utility.yul\":8730:8748   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8723:8753   */\n      mstore\n        /* \"#utility.yul\":8789:8812   */\n      0x54617267657420416c7265616479205261697365640000000000000000000000\n        /* \"#utility.yul\":8769:8787   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8762:8813   */\n      mstore\n        /* \"#utility.yul\":8830:8848   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3740:3805  require( totalSupply() < targetAmount , \"Target Already Raised\" ) */\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/Fundraising.sol\":3842:3852  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Fundraising.sol\":3823:3828  value */\n      dup2\n        /* \"contracts/Fundraising.sol\":3823:3853  value <= balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"contracts/Fundraising.sol\":3815:3883  require(value <= balanceOf(msg.sender), \"Not Great Enough Balance!\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9418:9420   */\n      0x20\n        /* \"contracts/Fundraising.sol\":3815:3883  require(value <= balanceOf(msg.sender), \"Not Great Enough Balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9400:9421   */\n      mstore\n        /* \"#utility.yul\":9457:9459   */\n      0x19\n        /* \"#utility.yul\":9437:9455   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9430:9460   */\n      mstore\n        /* \"#utility.yul\":9496:9523   */\n      0x4e6f7420477265617420456e6f7567682042616c616e63652100000000000000\n        /* \"#utility.yul\":9476:9494   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9469:9524   */\n      mstore\n        /* \"#utility.yul\":9541:9559   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3815:3883  require(value <= balanceOf(msg.sender), \"Not Great Enough Balance!\") */\n      tag_145\n        /* \"#utility.yul\":9216:9565   */\n      jump\n        /* \"contracts/Fundraising.sol\":3815:3883  require(value <= balanceOf(msg.sender), \"Not Great Enough Balance!\") */\n    tag_148:\n        /* \"contracts/Fundraising.sol\":3982:3986  coin */\n      sload(0x05)\n        /* \"contracts/Fundraising.sol\":3982:4014  coin.transfer(msg.sender, value) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Fundraising.sol\":3996:4006  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":3982:4014  coin.transfer(msg.sender, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3398:3472   */\n      mstore\n        /* \"#utility.yul\":3488:3506   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3481:3515   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Fundraising.sol\":3982:3986  coin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Fundraising.sol\":3982:3995  coin.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3371:3389   */\n      0x44\n      add\n        /* \"contracts/Fundraising.sol\":3982:4014  coin.transfer(msg.sender, value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      pop\n        /* \"contracts/Fundraising.sol\":4040:4045  value */\n      dup1\n        /* \"contracts/Fundraising.sol\":4024:4036  amountRaised */\n      0x07\n      0x00\n        /* \"contracts/Fundraising.sol\":4024:4045  amountRaised -= value */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Fundraising.sol\":4055:4079  _burn(msg.sender, value) */\n      tag_160\n      swap1\n      pop\n        /* \"contracts/Fundraising.sol\":4061:4071  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":4073:4078  value */\n      dup3\n        /* \"contracts/Fundraising.sol\":4055:4060  _burn */\n      tag_161\n        /* \"contracts/Fundraising.sol\":4055:4079  _burn(msg.sender, value) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Fundraising.sol\":3678:4086  function withdrawInvestment(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_166:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Fundraising.sol\":3040:3575  function invest(uint256 value) external {... */\n    tag_76:\n        /* \"contracts/Fundraising.sol\":3115:3127  targetAmount */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Fundraising.sol\":3099:3127  totalSupply() < targetAmount */\n      lt\n        /* \"contracts/Fundraising.sol\":3090:3154  require( totalSupply() < targetAmount, \"Target Already Raised\" ) */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8711:8713   */\n      0x20\n        /* \"contracts/Fundraising.sol\":3090:3154  require( totalSupply() < targetAmount, \"Target Already Raised\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8693:8714   */\n      mstore\n        /* \"#utility.yul\":8750:8752   */\n      0x15\n        /* \"#utility.yul\":8730:8748   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8723:8753   */\n      mstore\n        /* \"#utility.yul\":8789:8812   */\n      0x54617267657420416c7265616479205261697365640000000000000000000000\n        /* \"#utility.yul\":8769:8787   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8762:8813   */\n      mstore\n        /* \"#utility.yul\":8830:8848   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3090:3154  require( totalSupply() < targetAmount, \"Target Already Raised\" ) */\n      tag_145\n        /* \"#utility.yul\":8509:8854   */\n      jump\n        /* \"contracts/Fundraising.sol\":3090:3154  require( totalSupply() < targetAmount, \"Target Already Raised\" ) */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Fundraising.sol\":3181:3193  targetAmount */\n      sload(0x06)\n        /* \"contracts/Fundraising.sol\":3181:3209  targetAmount - totalSupply() */\n      tag_173\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_173:\n        /* \"contracts/Fundraising.sol\":3172:3177  value */\n      dup2\n        /* \"contracts/Fundraising.sol\":3172:3209  value <= targetAmount - totalSupply() */\n      gt\n      iszero\n        /* \"contracts/Fundraising.sol\":3164:3237  require(value <= targetAmount - totalSupply(), \"Not enough shares left!\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8012:8014   */\n      0x20\n        /* \"contracts/Fundraising.sol\":3164:3237  require(value <= targetAmount - totalSupply(), \"Not enough shares left!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7994:8015   */\n      mstore\n        /* \"#utility.yul\":8051:8053   */\n      0x17\n        /* \"#utility.yul\":8031:8049   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8024:8054   */\n      mstore\n        /* \"#utility.yul\":8090:8115   */\n      0x4e6f7420656e6f75676820736861726573206c65667421000000000000000000\n        /* \"#utility.yul\":8070:8088   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8063:8116   */\n      mstore\n        /* \"#utility.yul\":8133:8151   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3164:3237  require(value <= targetAmount - totalSupply(), \"Not enough shares left!\") */\n      tag_145\n        /* \"#utility.yul\":7810:8157   */\n      jump\n        /* \"contracts/Fundraising.sol\":3164:3237  require(value <= targetAmount - totalSupply(), \"Not enough shares left!\") */\n    tag_174:\n        /* \"contracts/Fundraising.sol\":3257:3263  paused */\n      and(0xff, sload(0x09))\n        /* \"contracts/Fundraising.sol\":3256:3263  !paused */\n      iszero\n        /* \"contracts/Fundraising.sol\":3247:3287  require( !paused, \"Contract Is Paused\" ) */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8364:8366   */\n      0x20\n        /* \"contracts/Fundraising.sol\":3247:3287  require( !paused, \"Contract Is Paused\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8346:8367   */\n      mstore\n        /* \"#utility.yul\":8403:8405   */\n      0x12\n        /* \"#utility.yul\":8383:8401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8376:8406   */\n      mstore\n        /* \"#utility.yul\":8442:8462   */\n      0x436f6e7472616374204973205061757365640000000000000000000000000000\n        /* \"#utility.yul\":8422:8440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8415:8463   */\n      mstore\n        /* \"#utility.yul\":8480:8498   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3247:3287  require( !paused, \"Contract Is Paused\" ) */\n      tag_145\n        /* \"#utility.yul\":8162:8504   */\n      jump\n        /* \"contracts/Fundraising.sol\":3247:3287  require( !paused, \"Contract Is Paused\" ) */\n    tag_177:\n        /* \"contracts/Fundraising.sol\":3307:3313  killed */\n      sload(0x09)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Fundraising.sol\":3306:3313  !killed */\n      iszero\n        /* \"contracts/Fundraising.sol\":3297:3336  require( !killed, \"Contract Is Killed\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7665:7667   */\n      0x20\n        /* \"contracts/Fundraising.sol\":3297:3336  require( !killed, \"Contract Is Killed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7647:7668   */\n      mstore\n        /* \"#utility.yul\":7704:7706   */\n      0x12\n        /* \"#utility.yul\":7684:7702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7677:7707   */\n      mstore\n        /* \"#utility.yul\":7743:7763   */\n      0x436f6e7472616374204973204b696c6c65640000000000000000000000000000\n        /* \"#utility.yul\":7723:7741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7716:7764   */\n      mstore\n        /* \"#utility.yul\":7781:7799   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3297:3336  require( !killed, \"Contract Is Killed\") */\n      tag_145\n        /* \"#utility.yul\":7463:7805   */\n      jump\n        /* \"contracts/Fundraising.sol\":3297:3336  require( !killed, \"Contract Is Killed\") */\n    tag_180:\n        /* \"contracts/Fundraising.sol\":3347:3351  coin */\n      sload(0x05)\n        /* \"contracts/Fundraising.sol\":3347:3398  coin.transferFrom(msg.sender, address(this), value) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Fundraising.sol\":3365:3375  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":3347:3398  coin.transferFrom(msg.sender, address(this), value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3084:3118   */\n      mstore\n        /* \"contracts/Fundraising.sol\":3385:3389  this */\n      address\n        /* \"#utility.yul\":3134:3152   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3127:3170   */\n      mstore\n        /* \"#utility.yul\":3186:3204   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3179:3213   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Fundraising.sol\":3347:3351  coin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Fundraising.sol\":3347:3364  coin.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2996:3014   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":3347:3398  coin.transferFrom(msg.sender, address(this), value) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_188:\n      pop\n        /* \"contracts/Fundraising.sol\":3424:3429  value */\n      dup1\n        /* \"contracts/Fundraising.sol\":3408:3420  amountRaised */\n      0x07\n      0x00\n        /* \"contracts/Fundraising.sol\":3408:3429  amountRaised += value */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Fundraising.sol\":3439:3463  _mint(msg.sender, value) */\n      tag_191\n      swap1\n      pop\n        /* \"contracts/Fundraising.sol\":3445:3455  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":3457:3462  value */\n      dup3\n        /* \"contracts/Fundraising.sol\":3439:3444  _mint */\n      tag_192\n        /* \"contracts/Fundraising.sol\":3439:3463  _mint(msg.sender, value) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Fundraising.sol\":3478:3490  targetAmount */\n      sload(0x06)\n        /* \"contracts/Fundraising.sol\":3478:3507  targetAmount == totalSupply() */\n      eq\n        /* \"contracts/Fundraising.sol\":3474:3569  if (targetAmount == totalSupply()) { ... */\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/Fundraising.sol\":3524:3528  coin */\n      sload(0x05)\n        /* \"contracts/Fundraising.sol\":3538:3543  admin */\n      sload(0x09)\n        /* \"contracts/Fundraising.sol\":3545:3557  targetAmount */\n      sload(0x06)\n        /* \"contracts/Fundraising.sol\":3524:3558  coin.transfer(admin, targetAmount) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Fundraising.sol\":3524:3528  coin */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Fundraising.sol\":3538:3543  admin */\n      0x010000\n      swap1\n      swap4\n      div\n      dup4\n      and\n        /* \"contracts/Fundraising.sol\":3524:3558  coin.transfer(admin, targetAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3398:3472   */\n      mstore\n        /* \"#utility.yul\":3488:3506   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3481:3515   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Fundraising.sol\":3524:3528  coin */\n      swap2\n      and\n      swap1\n        /* \"contracts/Fundraising.sol\":3524:3537  coin.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3371:3389   */\n      0x44\n      add\n        /* \"contracts/Fundraising.sol\":3524:3558  coin.transfer(admin, targetAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_199:\n      pop\n        /* \"contracts/Fundraising.sol\":3040:3575  function invest(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Fundraising.sol\":2158:2262  function decimals() public view virtual override returns (uint8) {... */\n    tag_78:\n        /* \"contracts/Fundraising.sol\":2240:2244  coin */\n      sload(0x05)\n        /* \"contracts/Fundraising.sol\":2240:2255  coin.decimals() */\n      0x40\n      dup1\n      mload\n      0x313ce56700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Fundraising.sol\":2216:2221  uint8 */\n      0x00\n      swap3\n        /* \"contracts/Fundraising.sol\":2240:2244  coin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap2\n        /* \"contracts/Fundraising.sol\":2240:2253  coin.decimals */\n      0x313ce567\n      swap2\n        /* \"contracts/Fundraising.sol\":2240:2255  coin.decimals() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Fundraising.sol\":2240:2244  coin */\n      dup7\n        /* \"contracts/Fundraising.sol\":2240:2255  coin.decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"contracts/Fundraising.sol\":2233:2255  return coin.decimals() */\n      swap1\n      pop\n        /* \"contracts/Fundraising.sol\":2158:2262  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_138\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_210\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_190\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":2790:2855  function kill() onlyOwner external {... */\n    tag_86:\n        /* \"contracts/Fundraising.sol\":2324:2329  admin */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Fundraising.sol\":2310:2320  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":2310:2329  msg.sender == admin */\n      eq\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9061:9063   */\n      0x20\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9043:9064   */\n      mstore\n        /* \"#utility.yul\":9100:9102   */\n      0x1c\n        /* \"#utility.yul\":9080:9098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9073:9103   */\n      mstore\n        /* \"#utility.yul\":9139:9169   */\n      0x4f6e6c792041646d696e2043616e2050617573652f556e706175736500000000\n        /* \"#utility.yul\":9119:9137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9112:9170   */\n      mstore\n        /* \"#utility.yul\":9187:9205   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n      tag_145\n        /* \"#utility.yul\":8859:9211   */\n      jump\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n    tag_212:\n        /* \"contracts/Fundraising.sol\":2835:2841  killed */\n      0x09\n        /* \"contracts/Fundraising.sol\":2835:2848  killed = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/Fundraising.sol\":2790:2855  function kill() onlyOwner external {... */\n      jump\t// out\n        /* \"contracts/Fundraising.sol\":4204:4480  function redeemNFT() external {... */\n    tag_96:\n        /* \"contracts/Fundraising.sol\":4278:4290  targetAmount */\n      sload(0x06)\n        /* \"contracts/Fundraising.sol\":4263:4273  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Fundraising.sol\":4253:4290  balanceOf(msg.sender) == targetAmount */\n      eq\n        /* \"contracts/Fundraising.sol\":4244:4324  require( balanceOf(msg.sender) == targetAmount, \"Do Not Have RFT Total Supply\" ) */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6543:6545   */\n      0x20\n        /* \"contracts/Fundraising.sol\":4244:4324  require( balanceOf(msg.sender) == targetAmount, \"Do Not Have RFT Total Supply\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6525:6546   */\n      mstore\n        /* \"#utility.yul\":6582:6584   */\n      0x1c\n        /* \"#utility.yul\":6562:6580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6555:6585   */\n      mstore\n        /* \"#utility.yul\":6621:6651   */\n      0x446f204e6f7420486176652052465420546f74616c20537570706c7900000000\n        /* \"#utility.yul\":6601:6619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6594:6652   */\n      mstore\n        /* \"#utility.yul\":6669:6687   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":4244:4324  require( balanceOf(msg.sender) == targetAmount, \"Do Not Have RFT Total Supply\" ) */\n      tag_145\n        /* \"#utility.yul\":6341:6693   */\n      jump\n        /* \"contracts/Fundraising.sol\":4244:4324  require( balanceOf(msg.sender) == targetAmount, \"Do Not Have RFT Total Supply\" ) */\n    tag_219:\n        /* \"contracts/Fundraising.sol\":4334:4367  _burn(msg.sender, totalSupply() ) */\n      tag_222\n        /* \"contracts/Fundraising.sol\":4340:4350  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":4352:4365  totalSupply() */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/Fundraising.sol\":4352:4365  totalSupply() */\n    tag_223:\n        /* \"contracts/Fundraising.sol\":4334:4339  _burn */\n      tag_161\n        /* \"contracts/Fundraising.sol\":4334:4367  _burn(msg.sender, totalSupply() ) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/Fundraising.sol\":4377:4473  projectMarketplace.safeTransferFrom( address(this), msg.sender, uint256(uint160(address(this)))) */\n      mload(0x40)\n      0x42842e0e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Fundraising.sol\":4422:4426  this */\n      address\n        /* \"contracts/Fundraising.sol\":4377:4473  projectMarketplace.safeTransferFrom( address(this), msg.sender, uint256(uint160(address(this)))) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3084:3118   */\n      dup2\n      swap1\n      mstore\n        /* \"contracts/Fundraising.sol\":4429:4439  msg.sender */\n      caller\n        /* \"#utility.yul\":3134:3152   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3127:3170   */\n      mstore\n        /* \"#utility.yul\":3186:3204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3179:3213   */\n      mstore\n        /* \"contracts/Fundraising.sol\":4377:4395  projectMarketplace */\n      immutable(\"0x49847a2314cecfe9e5127b41702adba4edb0260cff60a0a5f30c53ee5905efea\")\n        /* \"contracts/Fundraising.sol\":4377:4412  projectMarketplace.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":2996:3014   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":4377:4473  projectMarketplace.safeTransferFrom( address(this), msg.sender, uint256(uint160(address(this)))) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Fundraising.sol\":4204:4480  function redeemNFT() external {... */\n      jump\t// out\n        /* \"contracts/Fundraising.sol\":2630:2784  function pause() onlyOwner external {... */\n    tag_105:\n        /* \"contracts/Fundraising.sol\":2324:2329  admin */\n      sload(0x09)\n      0x010000\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Fundraising.sol\":2310:2320  msg.sender */\n      caller\n        /* \"contracts/Fundraising.sol\":2310:2329  msg.sender == admin */\n      eq\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9061:9063   */\n      0x20\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9043:9064   */\n      mstore\n        /* \"#utility.yul\":9100:9102   */\n      0x1c\n        /* \"#utility.yul\":9080:9098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9073:9103   */\n      mstore\n        /* \"#utility.yul\":9139:9169   */\n      0x4f6e6c792041646d696e2043616e2050617573652f556e706175736500000000\n        /* \"#utility.yul\":9119:9137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9112:9170   */\n      mstore\n        /* \"#utility.yul\":9187:9205   */\n      0x64\n      add\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n      tag_145\n        /* \"#utility.yul\":8859:9211   */\n      jump\n        /* \"contracts/Fundraising.sol\":2302:2362  require(msg.sender == admin, \"Only Admin Can Pause/Unpause\") */\n    tag_229:\n        /* \"contracts/Fundraising.sol\":2681:2687  paused */\n      and(0xff, sload(0x09))\n        /* \"contracts/Fundraising.sol\":2676:2778  if (!paused){... */\n      tag_232\n      jumpi\n        /* \"contracts/Fundraising.sol\":2702:2708  paused */\n      0x09\n        /* \"contracts/Fundraising.sol\":2702:2715  paused = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n        /* \"contracts/Fundraising.sol\":2711:2715  true */\n      0x01\n        /* \"contracts/Fundraising.sol\":2702:2715  paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Fundraising.sol\":2630:2784  function pause() onlyOwner external {... */\n      jump\t// out\n        /* \"contracts/Fundraising.sol\":2676:2778  if (!paused){... */\n    tag_232:\n        /* \"contracts/Fundraising.sol\":2753:2759  paused */\n      0x09\n        /* \"contracts/Fundraising.sol\":2753:2767  paused = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap1\n      sstore\n        /* \"contracts/Fundraising.sol\":2630:2784  function pause() onlyOwner external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10985:10987   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10967:10988   */\n      mstore\n        /* \"#utility.yul\":11024:11026   */\n      0x25\n        /* \"#utility.yul\":11004:11022   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10997:11027   */\n      mstore\n        /* \"#utility.yul\":11063:11097   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":11043:11061   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11036:11098   */\n      mstore\n        /* \"#utility.yul\":11134:11141   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11114:11132   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11107:11142   */\n      mstore\n        /* \"#utility.yul\":11159:11178   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_145\n        /* \"#utility.yul\":10783:11184   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/Fundraising.sol\":2861:2978  function amountUntilReachTarget() public view returns (uint256){... */\n    tag_121:\n        /* \"contracts/Fundraising.sol\":2916:2923  uint256 */\n      0x00\n        /* \"contracts/Fundraising.sol\":2957:2969  amountRaised */\n      sload(0x07)\n        /* \"contracts/Fundraising.sol\":2942:2954  targetAmount */\n      sload(0x06)\n        /* \"contracts/Fundraising.sol\":2942:2969  targetAmount - amountRaised */\n      tag_204\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10580:10582   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10562:10583   */\n      mstore\n        /* \"#utility.yul\":10619:10621   */\n      0x24\n        /* \"#utility.yul\":10599:10617   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10592:10622   */\n      mstore\n        /* \"#utility.yul\":10658:10692   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":10638:10656   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10631:10693   */\n      mstore\n        /* \"#utility.yul\":10729:10735   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10709:10727   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10702:10736   */\n      mstore\n        /* \"#utility.yul\":10753:10772   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_145\n        /* \"#utility.yul\":10378:10778   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6140:6142   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6122:6143   */\n      mstore\n        /* \"#utility.yul\":6179:6181   */\n      0x22\n        /* \"#utility.yul\":6159:6177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6152:6182   */\n      mstore\n        /* \"#utility.yul\":6218:6252   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":6198:6216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6191:6253   */\n      mstore\n        /* \"#utility.yul\":6289:6293   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6269:6287   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6262:6294   */\n      mstore\n        /* \"#utility.yul\":6311:6330   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_145\n        /* \"#utility.yul\":5938:6336   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":11695:11720   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":11668:11686   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9111:9687  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9194:9215  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9772:9774   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9754:9775   */\n      mstore\n        /* \"#utility.yul\":9811:9813   */\n      0x21\n        /* \"#utility.yul\":9791:9809   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9784:9814   */\n      mstore\n        /* \"#utility.yul\":9850:9884   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":9830:9848   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9823:9885   */\n      mstore\n        /* \"#utility.yul\":9921:9924   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9901:9919   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9894:9925   */\n      mstore\n        /* \"#utility.yul\":9942:9961   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_145\n        /* \"#utility.yul\":9570:9967   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9349:9367  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9324:9346  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9349:9367  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9385:9409  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5737:5739   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5719:5740   */\n      mstore\n        /* \"#utility.yul\":5776:5778   */\n      0x22\n        /* \"#utility.yul\":5756:5774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5749:5779   */\n      mstore\n        /* \"#utility.yul\":5815:5849   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":5795:5813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5788:5850   */\n      mstore\n        /* \"#utility.yul\":5886:5890   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5866:5884   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5859:5891   */\n      mstore\n        /* \"#utility.yul\":5908:5927   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_145\n        /* \"#utility.yul\":5535:5933   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9500  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9491  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9500  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9503:9526  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9526  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9558  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9520:9526  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9491  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      tag_271\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9520:9526  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      tag_159\n      jump\t// in\n    tag_271:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":11695:11720   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9610:9611  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":11683:11685   */\n      0x20\n        /* \"#utility.yul\":11668:11686   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      tag_261\n        /* \"#utility.yul\":11549:11726   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10977:10994  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6900:6902   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6882:6903   */\n      mstore\n        /* \"#utility.yul\":6939:6941   */\n      0x1d\n        /* \"#utility.yul\":6919:6937   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6912:6942   */\n      mstore\n        /* \"#utility.yul\":6978:7009   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":6958:6976   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6951:7010   */\n      mstore\n        /* \"#utility.yul\":7027:7045   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_145\n        /* \"#utility.yul\":6698:7051   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10174:10176   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10156:10177   */\n      mstore\n        /* \"#utility.yul\":10213:10215   */\n      0x25\n        /* \"#utility.yul\":10193:10211   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10186:10216   */\n      mstore\n        /* \"#utility.yul\":10252:10286   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10232:10250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10225:10287   */\n      mstore\n        /* \"#utility.yul\":10323:10330   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10303:10321   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10296:10331   */\n      mstore\n        /* \"#utility.yul\":10348:10367   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_145\n        /* \"#utility.yul\":9972:10373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5333:5335   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5315:5336   */\n      mstore\n        /* \"#utility.yul\":5372:5374   */\n      0x23\n        /* \"#utility.yul\":5352:5370   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5345:5375   */\n      mstore\n        /* \"#utility.yul\":5411:5445   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5391:5409   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5384:5446   */\n      mstore\n        /* \"#utility.yul\":5482:5487   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5462:5480   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5455:5488   */\n      mstore\n        /* \"#utility.yul\":5505:5524   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_145\n        /* \"#utility.yul\":5131:5530   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7258:7260   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7240:7261   */\n      mstore\n        /* \"#utility.yul\":7297:7299   */\n      0x26\n        /* \"#utility.yul\":7277:7295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7270:7300   */\n      mstore\n        /* \"#utility.yul\":7336:7370   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":7316:7334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7309:7371   */\n      mstore\n        /* \"#utility.yul\":7407:7415   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7387:7405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7380:7416   */\n      mstore\n        /* \"#utility.yul\":7433:7452   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_145\n        /* \"#utility.yul\":7056:7458   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_293\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_190\n      jump\t// in\n    tag_293:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_294\n      swap2\n        /* \"#utility.yul\":11695:11720   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11683:11685   */\n      0x20\n        /* \"#utility.yul\":11668:11686   */\n      add\n      swap1\n        /* \"#utility.yul\":11549:11726   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9111:9687  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11391:11393   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11373:11394   */\n      mstore\n        /* \"#utility.yul\":11430:11432   */\n      0x1f\n        /* \"#utility.yul\":11410:11428   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11403:11433   */\n      mstore\n        /* \"#utility.yul\":11469:11502   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":11449:11467   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11442:11503   */\n      mstore\n        /* \"#utility.yul\":11520:11538   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_145\n        /* \"#utility.yul\":11189:11544   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8629:8635  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_301\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_301:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_302\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_190\n      jump\t// in\n    tag_302:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":11695:11720   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8705:8706  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":11683:11685   */\n      0x20\n        /* \"#utility.yul\":11668:11686   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Fundraising.sol\":3524:3558  coin.transfer(admin, targetAmount) */\n      pop\n        /* \"contracts/Fundraising.sol\":3040:3575  function invest(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_308:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_310:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_92:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:347   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:347   */\n    tag_312:\n        /* \"#utility.yul\":366:395   */\n      tag_313\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_308\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":215:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:666   */\n    tag_125:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:555   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:555   */\n    tag_315:\n        /* \"#utility.yul\":574:603   */\n      tag_316\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_308\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_317\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_308\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":406:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_71:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:837   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:837   */\n    tag_319:\n        /* \"#utility.yul\":856:885   */\n      tag_320\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_308\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_321\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_308\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":671:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:1812   */\n    tag_55:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1109:1115   */\n      dup1\n        /* \"#utility.yul\":1117:1123   */\n      0x00\n        /* \"#utility.yul\":1125:1131   */\n      dup1\n        /* \"#utility.yul\":1133:1139   */\n      0x00\n        /* \"#utility.yul\":1186:1189   */\n      0x80\n        /* \"#utility.yul\":1174:1183   */\n      dup7\n        /* \"#utility.yul\":1165:1172   */\n      dup9\n        /* \"#utility.yul\":1161:1184   */\n      sub\n        /* \"#utility.yul\":1157:1190   */\n      slt\n        /* \"#utility.yul\":1154:1207   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1203:1204   */\n      0x00\n        /* \"#utility.yul\":1200:1201   */\n      dup1\n        /* \"#utility.yul\":1193:1205   */\n      revert\n        /* \"#utility.yul\":1154:1207   */\n    tag_323:\n        /* \"#utility.yul\":1226:1255   */\n      tag_324\n        /* \"#utility.yul\":1245:1254   */\n      dup7\n        /* \"#utility.yul\":1226:1255   */\n      tag_308\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1216:1255   */\n      swap5\n      pop\n        /* \"#utility.yul\":1274:1312   */\n      tag_325\n        /* \"#utility.yul\":1308:1310   */\n      0x20\n        /* \"#utility.yul\":1297:1306   */\n      dup8\n        /* \"#utility.yul\":1293:1311   */\n      add\n        /* \"#utility.yul\":1274:1312   */\n      tag_308\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1264:1312   */\n      swap4\n      pop\n        /* \"#utility.yul\":1359:1361   */\n      0x40\n        /* \"#utility.yul\":1348:1357   */\n      dup7\n        /* \"#utility.yul\":1344:1362   */\n      add\n        /* \"#utility.yul\":1331:1363   */\n      calldataload\n        /* \"#utility.yul\":1321:1363   */\n      swap3\n      pop\n        /* \"#utility.yul\":1414:1416   */\n      0x60\n        /* \"#utility.yul\":1403:1412   */\n      dup7\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"#utility.yul\":1386:1418   */\n      calldataload\n        /* \"#utility.yul\":1437:1455   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1478:1480   */\n      dup1\n        /* \"#utility.yul\":1470:1476   */\n      dup3\n        /* \"#utility.yul\":1467:1481   */\n      gt\n        /* \"#utility.yul\":1464:1498   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":1494:1495   */\n      0x00\n        /* \"#utility.yul\":1491:1492   */\n      dup1\n        /* \"#utility.yul\":1484:1496   */\n      revert\n        /* \"#utility.yul\":1464:1498   */\n    tag_326:\n        /* \"#utility.yul\":1532:1538   */\n      dup2\n        /* \"#utility.yul\":1521:1530   */\n      dup9\n        /* \"#utility.yul\":1517:1539   */\n      add\n        /* \"#utility.yul\":1507:1539   */\n      swap2\n      pop\n        /* \"#utility.yul\":1577:1584   */\n      dup9\n        /* \"#utility.yul\":1570:1574   */\n      0x1f\n        /* \"#utility.yul\":1566:1568   */\n      dup4\n        /* \"#utility.yul\":1562:1575   */\n      add\n        /* \"#utility.yul\":1558:1585   */\n      slt\n        /* \"#utility.yul\":1548:1603   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1596:1597   */\n      dup1\n        /* \"#utility.yul\":1589:1601   */\n      revert\n        /* \"#utility.yul\":1548:1603   */\n    tag_327:\n        /* \"#utility.yul\":1639:1641   */\n      dup2\n        /* \"#utility.yul\":1626:1642   */\n      calldataload\n        /* \"#utility.yul\":1665:1667   */\n      dup2\n        /* \"#utility.yul\":1657:1663   */\n      dup2\n        /* \"#utility.yul\":1654:1668   */\n      gt\n        /* \"#utility.yul\":1651:1685   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":1681:1682   */\n      0x00\n        /* \"#utility.yul\":1678:1679   */\n      dup1\n        /* \"#utility.yul\":1671:1683   */\n      revert\n        /* \"#utility.yul\":1651:1685   */\n    tag_328:\n        /* \"#utility.yul\":1726:1733   */\n      dup10\n        /* \"#utility.yul\":1721:1723   */\n      0x20\n        /* \"#utility.yul\":1712:1718   */\n      dup3\n        /* \"#utility.yul\":1708:1710   */\n      dup6\n        /* \"#utility.yul\":1704:1719   */\n      add\n        /* \"#utility.yul\":1700:1724   */\n      add\n        /* \"#utility.yul\":1697:1734   */\n      gt\n        /* \"#utility.yul\":1694:1751   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":1747:1748   */\n      0x00\n        /* \"#utility.yul\":1744:1745   */\n      dup1\n        /* \"#utility.yul\":1737:1749   */\n      revert\n        /* \"#utility.yul\":1694:1751   */\n    tag_329:\n        /* \"#utility.yul\":1004:1812   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":1778:1780   */\n      0x20\n        /* \"#utility.yul\":1770:1781   */\n      add\n      swap5\n        /* \"#utility.yul\":1800:1806   */\n      swap4\n        /* \"#utility.yul\":1004:1812   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1817:2071   */\n    tag_45:\n        /* \"#utility.yul\":1885:1891   */\n      0x00\n        /* \"#utility.yul\":1893:1899   */\n      dup1\n        /* \"#utility.yul\":1946:1948   */\n      0x40\n        /* \"#utility.yul\":1934:1943   */\n      dup4\n        /* \"#utility.yul\":1925:1932   */\n      dup6\n        /* \"#utility.yul\":1921:1944   */\n      sub\n        /* \"#utility.yul\":1917:1949   */\n      slt\n        /* \"#utility.yul\":1914:1966   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1959:1960   */\n      dup1\n        /* \"#utility.yul\":1952:1964   */\n      revert\n        /* \"#utility.yul\":1914:1966   */\n    tag_331:\n        /* \"#utility.yul\":1985:2014   */\n      tag_332\n        /* \"#utility.yul\":2004:2013   */\n      dup4\n        /* \"#utility.yul\":1985:2014   */\n      tag_308\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1975:2014   */\n      swap5\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2046:2064   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2033:2065   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1817:2071   */\n      jump\t// out\n        /* \"#utility.yul\":2076:2353   */\n    tag_157:\n        /* \"#utility.yul\":2143:2149   */\n      0x00\n        /* \"#utility.yul\":2196:2198   */\n      0x20\n        /* \"#utility.yul\":2184:2193   */\n      dup3\n        /* \"#utility.yul\":2175:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2194   */\n      sub\n        /* \"#utility.yul\":2167:2199   */\n      slt\n        /* \"#utility.yul\":2164:2216   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2212:2213   */\n      0x00\n        /* \"#utility.yul\":2209:2210   */\n      dup1\n        /* \"#utility.yul\":2202:2214   */\n      revert\n        /* \"#utility.yul\":2164:2216   */\n    tag_334:\n        /* \"#utility.yul\":2244:2253   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      mload\n        /* \"#utility.yul\":2297:2302   */\n      dup1\n        /* \"#utility.yul\":2290:2303   */\n      iszero\n        /* \"#utility.yul\":2283:2304   */\n      iszero\n        /* \"#utility.yul\":2276:2281   */\n      dup2\n        /* \"#utility.yul\":2273:2305   */\n      eq\n        /* \"#utility.yul\":2263:2323   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2319:2320   */\n      0x00\n        /* \"#utility.yul\":2316:2317   */\n      dup1\n        /* \"#utility.yul\":2309:2321   */\n      revert\n        /* \"#utility.yul\":2358:2538   */\n    tag_67:\n        /* \"#utility.yul\":2417:2423   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2458:2467   */\n      dup3\n        /* \"#utility.yul\":2449:2456   */\n      dup5\n        /* \"#utility.yul\":2445:2468   */\n      sub\n        /* \"#utility.yul\":2441:2473   */\n      slt\n        /* \"#utility.yul\":2438:2490   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2486:2487   */\n      0x00\n        /* \"#utility.yul\":2483:2484   */\n      dup1\n        /* \"#utility.yul\":2476:2488   */\n      revert\n        /* \"#utility.yul\":2438:2490   */\n    tag_337:\n      pop\n        /* \"#utility.yul\":2509:2532   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2358:2538   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2816   */\n    tag_205:\n        /* \"#utility.yul\":2611:2617   */\n      0x00\n        /* \"#utility.yul\":2664:2666   */\n      0x20\n        /* \"#utility.yul\":2652:2661   */\n      dup3\n        /* \"#utility.yul\":2643:2650   */\n      dup5\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2684   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2680:2681   */\n      0x00\n        /* \"#utility.yul\":2677:2678   */\n      dup1\n        /* \"#utility.yul\":2670:2682   */\n      revert\n        /* \"#utility.yul\":2632:2684   */\n    tag_339:\n        /* \"#utility.yul\":2712:2721   */\n      dup2\n        /* \"#utility.yul\":2706:2722   */\n      mload\n        /* \"#utility.yul\":2762:2766   */\n      0xff\n        /* \"#utility.yul\":2755:2760   */\n      dup2\n        /* \"#utility.yul\":2751:2767   */\n      and\n        /* \"#utility.yul\":2744:2749   */\n      dup2\n        /* \"#utility.yul\":2741:2768   */\n      eq\n        /* \"#utility.yul\":2731:2786   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2782:2783   */\n      0x00\n        /* \"#utility.yul\":2779:2780   */\n      dup1\n        /* \"#utility.yul\":2772:2784   */\n      revert\n        /* \"#utility.yul\":4470:5126   */\n    tag_38:\n        /* \"#utility.yul\":4582:4586   */\n      0x00\n        /* \"#utility.yul\":4611:4613   */\n      0x20\n        /* \"#utility.yul\":4640:4642   */\n      dup1\n        /* \"#utility.yul\":4629:4638   */\n      dup4\n        /* \"#utility.yul\":4622:4643   */\n      mstore\n        /* \"#utility.yul\":4672:4678   */\n      dup4\n        /* \"#utility.yul\":4666:4679   */\n      mload\n        /* \"#utility.yul\":4715:4721   */\n      dup1\n        /* \"#utility.yul\":4710:4712   */\n      dup3\n        /* \"#utility.yul\":4699:4708   */\n      dup6\n        /* \"#utility.yul\":4695:4713   */\n      add\n        /* \"#utility.yul\":4688:4722   */\n      mstore\n        /* \"#utility.yul\":4740:4741   */\n      0x00\n        /* \"#utility.yul\":4750:4890   */\n    tag_348:\n        /* \"#utility.yul\":4764:4770   */\n      dup2\n        /* \"#utility.yul\":4761:4762   */\n      dup2\n        /* \"#utility.yul\":4758:4771   */\n      lt\n        /* \"#utility.yul\":4750:4890   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":4859:4873   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":4855:4878   */\n      dup4\n      add\n        /* \"#utility.yul\":4849:4879   */\n      mload\n        /* \"#utility.yul\":4825:4842   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":4844:4846   */\n      0x40\n        /* \"#utility.yul\":4821:4847   */\n      add\n        /* \"#utility.yul\":4814:4880   */\n      mstore\n        /* \"#utility.yul\":4779:4789   */\n      dup3\n      add\n        /* \"#utility.yul\":4750:4890   */\n      jump(tag_348)\n    tag_350:\n        /* \"#utility.yul\":4908:4914   */\n      dup2\n        /* \"#utility.yul\":4905:4906   */\n      dup2\n        /* \"#utility.yul\":4902:4915   */\n      gt\n        /* \"#utility.yul\":4899:4990   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4973:4975   */\n      0x40\n        /* \"#utility.yul\":4964:4970   */\n      dup4\n        /* \"#utility.yul\":4953:4962   */\n      dup8\n        /* \"#utility.yul\":4949:4971   */\n      add\n        /* \"#utility.yul\":4945:4976   */\n      add\n        /* \"#utility.yul\":4938:4980   */\n      mstore\n        /* \"#utility.yul\":4899:4990   */\n    tag_351:\n      pop\n        /* \"#utility.yul\":5042:5044   */\n      0x1f\n        /* \"#utility.yul\":5030:5045   */\n      add\n        /* \"#utility.yul\":5047:5113   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":5026:5114   */\n      and\n        /* \"#utility.yul\":5011:5115   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5117:5119   */\n      0x40\n        /* \"#utility.yul\":5007:5120   */\n      add\n      swap4\n        /* \"#utility.yul\":4470:5126   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11920:12048   */\n    tag_190:\n        /* \"#utility.yul\":11960:11963   */\n      0x00\n        /* \"#utility.yul\":11991:11992   */\n      dup3\n        /* \"#utility.yul\":11987:11993   */\n      not\n        /* \"#utility.yul\":11984:11985   */\n      dup3\n        /* \"#utility.yul\":11981:11994   */\n      gt\n        /* \"#utility.yul\":11978:12017   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":11997:12015   */\n      tag_373\n      tag_374\n      jump\t// in\n    tag_373:\n      pop\n        /* \"#utility.yul\":12033:12042   */\n      add\n      swap1\n        /* \"#utility.yul\":11920:12048   */\n      jump\t// out\n        /* \"#utility.yul\":12053:12178   */\n    tag_159:\n        /* \"#utility.yul\":12093:12097   */\n      0x00\n        /* \"#utility.yul\":12121:12122   */\n      dup3\n        /* \"#utility.yul\":12118:12119   */\n      dup3\n        /* \"#utility.yul\":12115:12123   */\n      lt\n        /* \"#utility.yul\":12112:12146   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":12126:12144   */\n      tag_377\n      tag_374\n      jump\t// in\n    tag_377:\n      pop\n        /* \"#utility.yul\":12163:12172   */\n      sub\n      swap1\n        /* \"#utility.yul\":12053:12178   */\n      jump\t// out\n        /* \"#utility.yul\":12183:12620   */\n    tag_130:\n        /* \"#utility.yul\":12262:12263   */\n      0x01\n        /* \"#utility.yul\":12258:12270   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12305:12317   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12326:12387   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":12380:12384   */\n      0x7f\n        /* \"#utility.yul\":12372:12378   */\n      dup3\n        /* \"#utility.yul\":12368:12385   */\n      and\n        /* \"#utility.yul\":12358:12385   */\n      swap2\n      pop\n        /* \"#utility.yul\":12326:12387   */\n    tag_379:\n        /* \"#utility.yul\":12433:12435   */\n      0x20\n        /* \"#utility.yul\":12425:12431   */\n      dup3\n        /* \"#utility.yul\":12422:12436   */\n      lt\n        /* \"#utility.yul\":12402:12420   */\n      dup2\n        /* \"#utility.yul\":12399:12437   */\n      eq\n        /* \"#utility.yul\":12396:12614   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":12470:12547   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12467:12468   */\n      0x00\n        /* \"#utility.yul\":12460:12548   */\n      mstore\n        /* \"#utility.yul\":12571:12575   */\n      0x22\n        /* \"#utility.yul\":12568:12569   */\n      0x04\n        /* \"#utility.yul\":12561:12576   */\n      mstore\n        /* \"#utility.yul\":12599:12603   */\n      0x24\n        /* \"#utility.yul\":12596:12597   */\n      0x00\n        /* \"#utility.yul\":12589:12604   */\n      revert\n        /* \"#utility.yul\":12396:12614   */\n    tag_380:\n      pop\n        /* \"#utility.yul\":12183:12620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12625:12809   */\n    tag_374:\n        /* \"#utility.yul\":12677:12754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12674:12675   */\n      0x00\n        /* \"#utility.yul\":12667:12755   */\n      mstore\n        /* \"#utility.yul\":12774:12778   */\n      0x11\n        /* \"#utility.yul\":12771:12772   */\n      0x04\n        /* \"#utility.yul\":12764:12779   */\n      mstore\n        /* \"#utility.yul\":12798:12802   */\n      0x24\n        /* \"#utility.yul\":12795:12796   */\n      0x00\n        /* \"#utility.yul\":12788:12803   */\n      revert\n\n    auxdata: 0xa26469706673582212204b461779ad5fe4b830de988dcb1c63f08a6fecc43df95921c99081c07080430a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_937": {
									"entryPoint": null,
									"id": 937,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"extract_byte_array_length": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2462:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "260:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "309:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "311:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "311:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "311:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "288:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "296:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "284:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "284:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "303:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "280:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:35:8"
															},
															"nodeType": "YulIf",
															"src": "270:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "334:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "350:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "344:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "344:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "338:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "366:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "384:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "388:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "370:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "417:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "419:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "409:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "413:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "406:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:10:8"
															},
															"nodeType": "YulIf",
															"src": "403:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "462:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "474:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "494:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "488:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "488:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "478:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "506:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "552:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "556:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "548:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "548:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "563:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "544:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "544:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "568:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "540:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "540:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "573:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "536:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "510:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "636:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "638:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "638:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "638:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "595:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "607:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "592:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "592:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "615:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "627:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "612:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "589:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:46:8"
															},
															"nodeType": "YulIf",
															"src": "586:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "678:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "667:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "705:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "713:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "698:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "725:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "735:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "729:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "785:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "794:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "797:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "787:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "787:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "787:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "762:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "770:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "758:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "758:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "775:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "780:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:33:8"
															},
															"nodeType": "YulIf",
															"src": "748:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "819:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "814:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "875:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "904:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "900:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "900:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "916:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "896:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "896:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "935:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "943:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "931:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "931:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "947:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "927:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "927:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "921:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "921:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "889:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "889:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "889:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "840:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "843:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "837:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "847:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "849:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "858:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "854:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "854:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "849:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "833:3:8",
																"statements": []
															},
															"src": "829:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "992:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1021:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1029:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1017:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1017:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1034:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1013:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1013:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1039:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1006:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1006:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "977:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "980:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "974:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "974:9:8"
															},
															"nodeType": "YulIf",
															"src": "971:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1060:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1069:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1060:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "234:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "242:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "250:5:8",
														"type": ""
													}
												],
												"src": "196:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:671:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1293:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1302:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1289:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1314:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1285:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:33:8"
															},
															"nodeType": "YulIf",
															"src": "1282:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1360:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1354:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:39:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1399:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1393:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:25:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1383:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1427:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1445:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1441:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1441:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1431:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1482:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1484:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1484:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1470:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1467:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:14:8"
															},
															"nodeType": "YulIf",
															"src": "1464:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1561:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1570:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1517:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:61:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1587:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1613:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1624:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1603:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1591:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1657:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1666:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1659:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1659:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1659:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1643:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1653:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1640:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:16:8"
															},
															"nodeType": "YulIf",
															"src": "1637:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1682:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1725:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1736:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1721:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1721:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1747:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1692:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1692:63:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1682:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1764:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1784:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1780:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1774:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:25:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1808:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1852:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1863:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1818:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:50:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1877:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1921:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1917:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1887:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:50:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1198:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1209:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1221:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1229:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1237:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1245:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1253:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1261:6:8",
														"type": ""
													}
												],
												"src": "1086:857:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2003:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2013:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2030:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2023:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2044:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2074:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2080:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2048:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2121:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2123:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2137:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2145:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2133:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2123:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2101:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:26:8"
															},
															"nodeType": "YulIf",
															"src": "2091:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2211:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2232:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2239:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2244:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2235:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2235:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2225:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2225:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2225:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2276:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2279:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2269:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2269:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2269:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2304:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2307:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2297:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2297:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2167:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2190:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2187:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2187:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2164:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:38:8"
															},
															"nodeType": "YulIf",
															"src": "2161:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1983:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1992:6:8",
														"type": ""
													}
												],
												"src": "1948:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2365:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2389:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2394:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2375:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2375:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2449:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2333:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := mload(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526009805461ffff191690553480156200001c57600080fd5b5060405162001bd538038062001bd58339810160408190526200003f916200023f565b84518590859062000058906003906020850190620000c5565b5080516200006e906004906020840190620000c5565b5050506006959095556008919091556009805462010000600160b01b031916620100006001600160a01b0393841602179055600580546001600160a01b031916919094161790925550503360601b60805262000334565b828054620000d390620002e1565b90600052602060002090601f016020900481019282620000f7576000855562000142565b82601f106200011257805160ff191683800117855562000142565b8280016001018555821562000142579182015b828111156200014257825182559160200191906001019062000125565b506200015092915062000154565b5090565b5b8082111562000150576000815560010162000155565b80516001600160a01b03811681146200018357600080fd5b919050565b600082601f8301126200019a57600080fd5b81516001600160401b0380821115620001b757620001b76200031e565b604051601f8301601f19908116603f01168101908282118183101715620001e257620001e26200031e565b81604052838152602092508683858801011115620001ff57600080fd5b600091505b8382101562000223578582018301518183018401529082019062000204565b83821115620002355760008385830101525b9695505050505050565b60008060008060008060c087890312156200025957600080fd5b865160208801519096506001600160401b03808211156200027957600080fd5b620002878a838b0162000188565b965060408901519150808211156200029e57600080fd5b50620002ad89828a0162000188565b94505060608701519250620002c5608088016200016b565b9150620002d560a088016200016b565b90509295509295509295565b600181811c90821680620002f657607f821691505b602082108114156200031857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c61187b6200035a600039600081816103910152610bc9015261187b6000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806341c0e1b5116100ee5780638456cb5911610097578063a457c2d711610071578063a457c2d7146103cc578063a9059cbb146103df578063bdf89682146103f2578063dd62ed3e146103fa57600080fd5b80638456cb59146103b3578063953b8fb8146103bb57806395d89b41146103c457600080fd5b806377262d38116100c857806377262d381461037b5780637b3e5e7b146103835780637e0d73d41461038c57600080fd5b806341c0e1b5146103305780635c975abb1461033857806370a082311461034557600080fd5b80631f3a0e41116101505780632afcf4801161012a5780632afcf480146102f0578063313ce56714610303578063395093511461031d57600080fd5b80631f3a0e41146102b65780632037fcbf146102c857806323b872dd146102dd57600080fd5b806311df99951161018157806311df999514610200578063150b7a021461024557806318160ddd146102ae57600080fd5b806306fdde03146101a857806306febe00146101c6578063095ea7b3146101dd575b600080fd5b6101b0610440565b6040516101bd9190611720565b60405180910390f35b6101cf60085481565b6040519081526020016101bd565b6101f06101eb366004611698565b6104d2565b60405190151581526020016101bd565b6005546102209073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bd565b61027d6102533660046115fd565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101bd565b6002546101cf565b6009546101f090610100900460ff1681565b6102db6102d63660046116e4565b6104ea565b005b6101f06102eb3660046115c1565b610671565b6102db6102fe3660046116e4565b610695565b61030b61098d565b60405160ff90911681526020016101bd565b6101f061032b366004611698565b610a35565b6102db610a81565b6009546101f09060ff1681565b6101cf61035336600461156c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6102db610b1c565b6101cf60075481565b6102207f000000000000000000000000000000000000000000000000000000000000000081565b6102db610c3c565b6101cf60065481565b6101b0610d0a565b6101f06103da366004611698565b610d19565b6101f06103ed366004611698565b610dd0565b6101cf610dde565b6101cf61040836600461158e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461044f906117c2565b80601f016020809104026020016040519081016040528092919081815260200182805461047b906117c2565b80156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b5050505050905090565b6000336104e0818585610df0565b5060019392505050565b600654600254106105425760405162461bcd60e51b815260206004820152601560248201527f54617267657420416c726561647920526169736564000000000000000000000060448201526064015b60405180910390fd5b336000908152602081905260409020548111156105a15760405162461bcd60e51b815260206004820152601960248201527f4e6f7420477265617420456e6f7567682042616c616e636521000000000000006044820152606401610539565b6005546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90604401602060405180830381600087803b15801561061357600080fd5b505af1158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b91906116c2565b50806007600082825461065e91906117ab565b9091555061066e90503382610f70565b50565b60003361067f858285611121565b61068a8585856111d8565b506001949350505050565b600654600254106106e85760405162461bcd60e51b815260206004820152601560248201527f54617267657420416c72656164792052616973656400000000000000000000006044820152606401610539565b6002546006546106f891906117ab565b8111156107475760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820736861726573206c656674210000000000000000006044820152606401610539565b60095460ff161561079a5760405162461bcd60e51b815260206004820152601260248201527f436f6e74726163742049732050617573656400000000000000000000000000006044820152606401610539565b600954610100900460ff16156107f25760405162461bcd60e51b815260206004820152601260248201527f436f6e7472616374204973204b696c6c656400000000000000000000000000006044820152606401610539565b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b15801561086a57600080fd5b505af115801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a291906116c2565b5080600760008282546108b59190611793565b909155506108c59050338261143d565b600254600654141561066e576005546009546006546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff6201000090930483166004820152602481019190915291169063a9059cbb90604401602060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098991906116c2565b5050565b600554604080517f313ce567000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163313ce567916004808301926020929190829003018186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3091906116fd565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104e09082908690610a7c908790611793565b610df0565b60095462010000900473ffffffffffffffffffffffffffffffffffffffff163314610aee5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792041646d696e2043616e2050617573652f556e7061757365000000006044820152606401610539565b600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6006543360009081526020819052604090205414610b7c5760405162461bcd60e51b815260206004820152601c60248201527f446f204e6f7420486176652052465420546f74616c20537570706c79000000006044820152606401610539565b610b8e33610b8960025490565b610f70565b6040517f42842e0e000000000000000000000000000000000000000000000000000000008152306004820181905233602483015260448201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342842e0e90606401600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b50505050565b60095462010000900473ffffffffffffffffffffffffffffffffffffffff163314610ca95760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792041646d696e2043616e2050617573652f556e7061757365000000006044820152606401610539565b60095460ff16610ce057600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60606004805461044f906117c2565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610dc35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610539565b61068a8286868403610df0565b6000336104e08185856111d8565b6000600754600654610a3091906117ab565b73ffffffffffffffffffffffffffffffffffffffff8316610e785760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216610f015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ff95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156110955760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208383039055600280548492906110d19084906117ab565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f63565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c3657818110156111cb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610539565b610c368484848403610df0565b73ffffffffffffffffffffffffffffffffffffffff83166112615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff82166112ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156113865760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906113ca908490611793565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161143091815260200190565b60405180910390a3610c36565b73ffffffffffffffffffffffffffffffffffffffff82166114a05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610539565b80600260008282546114b29190611793565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080548392906114ec908490611793565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461156757600080fd5b919050565b60006020828403121561157e57600080fd5b61158782611543565b9392505050565b600080604083850312156115a157600080fd5b6115aa83611543565b91506115b860208401611543565b90509250929050565b6000806000606084860312156115d657600080fd5b6115df84611543565b92506115ed60208501611543565b9150604084013590509250925092565b60008060008060006080868803121561161557600080fd5b61161e86611543565b945061162c60208701611543565b935060408601359250606086013567ffffffffffffffff8082111561165057600080fd5b818801915088601f83011261166457600080fd5b81358181111561167357600080fd5b89602082850101111561168557600080fd5b9699959850939650602001949392505050565b600080604083850312156116ab57600080fd5b6116b483611543565b946020939093013593505050565b6000602082840312156116d457600080fd5b8151801515811461158757600080fd5b6000602082840312156116f657600080fd5b5035919050565b60006020828403121561170f57600080fd5b815160ff8116811461158757600080fd5b600060208083528351808285015260005b8181101561174d57858101830151858201604001528201611731565b8181111561175f576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082198211156117a6576117a6611816565b500190565b6000828210156117bd576117bd611816565b500390565b600181811c908216806117d657607f821691505b60208210811415611810577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212204b461779ad5fe4b830de988dcb1c63f08a6fecc43df95921c99081c07080430a64736f6c63430008070033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BD5 CODESIZE SUB DUP1 PUSH3 0x1BD5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3F SWAP2 PUSH3 0x23F JUMP JUMPDEST DUP5 MLOAD DUP6 SWAP1 DUP6 SWAP1 PUSH3 0x58 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xC5 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x6E SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xC5 JUMP JUMPDEST POP POP POP PUSH1 0x6 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND MUL OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP5 AND OR SWAP1 SWAP3 SSTORE POP POP CALLER PUSH1 0x60 SHL PUSH1 0x80 MSTORE PUSH3 0x334 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD3 SWAP1 PUSH3 0x2E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x142 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x112 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x142 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x142 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x142 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x125 JUMP JUMPDEST POP PUSH3 0x150 SWAP3 SWAP2 POP PUSH3 0x154 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x150 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x155 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI PUSH3 0x1B7 PUSH3 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1E2 JUMPI PUSH3 0x1E2 PUSH3 0x31E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x223 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x204 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x235 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x287 DUP11 DUP4 DUP12 ADD PUSH3 0x188 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2AD DUP10 DUP3 DUP11 ADD PUSH3 0x188 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH3 0x2C5 PUSH1 0x80 DUP9 ADD PUSH3 0x16B JUMP JUMPDEST SWAP2 POP PUSH3 0x2D5 PUSH1 0xA0 DUP9 ADD PUSH3 0x16B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x318 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x187B PUSH3 0x35A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x391 ADD MSTORE PUSH2 0xBC9 ADD MSTORE PUSH2 0x187B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xBDF89682 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x953B8FB8 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77262D38 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x77262D38 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x7B3E5E7B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x7E0D73D4 EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F3A0E41 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x2AFCF480 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x2AFCF480 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F3A0E41 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x2037FCBF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11DF9995 GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x11DF9995 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6FEBE00 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x220 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x27D PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FD JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1F0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1F0 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x220 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x158E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x17C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47B SWAP1 PUSH2 0x17C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420416C7265616479205261697365640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420477265617420456E6F7567682042616C616E63652100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x66E SWAP1 POP CALLER DUP3 PUSH2 0xF70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x67F DUP6 DUP3 DUP6 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x68A DUP6 DUP6 DUP6 PUSH2 0x11D8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420416C7265616479205261697365640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820736861726573206C65667421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204973205061757365640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204973204B696C6C65640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8C5 SWAP1 POP CALLER DUP3 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x66E JUMPI PUSH1 0x5 SLOAD PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH3 0x10000 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x965 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x16FD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x4E0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xA7C SWAP1 DUP8 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2043616E2050617573652F556E706175736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F204E6F7420486176652052465420546F74616C20537570706C7900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH2 0xB8E CALLER PUSH2 0xB89 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2043616E2050617573652F556E706175736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0xCE0 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x17C2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH2 0x68A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x10D1 SWAP1 DUP5 SWAP1 PUSH2 0x17AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF63 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC36 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH2 0xC36 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xDF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x13CA SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1430 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x14A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14B2 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x14EC SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 DUP3 PUSH2 0x1543 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15AA DUP4 PUSH2 0x1543 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B8 PUSH1 0x20 DUP5 ADD PUSH2 0x1543 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15DF DUP5 PUSH2 0x1543 JUMP JUMPDEST SWAP3 POP PUSH2 0x15ED PUSH1 0x20 DUP6 ADD PUSH2 0x1543 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161E DUP7 PUSH2 0x1543 JUMP JUMPDEST SWAP5 POP PUSH2 0x162C PUSH1 0x20 DUP8 ADD PUSH2 0x1543 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B4 DUP4 PUSH2 0x1543 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x174D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1731 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x17A6 JUMPI PUSH2 0x17A6 PUSH2 0x1816 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17BD JUMPI PUSH2 0x17BD PUSH2 0x1816 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1810 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B CHAINID OR PUSH26 0xAD5FE4B830DE988DCB1C63F08A6FECC43DF95921C99081C07080 NUMBER EXP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1260:3222:7:-:0;;;1702:26;;;-1:-1:-1;;1735:26:7;;;1787:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13:0;;1930:4:7;;1936:6;;2044:13:0;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;;1954:12:7::1;:21:::0;;;;1985:19:::1;:42:::0;;;;2037:5:::1;:14:::0;;-1:-1:-1;;;;;;2037:14:7::1;::::0;-1:-1:-1;;;;;2037:14:7;;::::1;;;::::0;;2061:4:::1;:34:::0;;-1:-1:-1;;;;;;2061:34:7::1;::::0;;;::::1;;::::0;;;-1:-1:-1;;2134:10:7::1;2105:40;;;::::0;1260:3222;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1260:3222:7;;;-1:-1:-1;1260:3222:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:8;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:885::-;250:5;303:3;296:4;288:6;284:17;280:27;270:55;;321:1;318;311:12;270:55;344:13;;-1:-1:-1;;;;;406:10:8;;;403:36;;;419:18;;:::i;:::-;494:2;488:9;462:2;548:13;;-1:-1:-1;;544:22:8;;;568:2;540:31;536:40;524:53;;;592:18;;;612:22;;;589:46;586:72;;;638:18;;:::i;:::-;678:10;674:2;667:22;713:2;705:6;698:18;735:4;725:14;;780:3;775:2;770;762:6;758:15;754:24;751:33;748:53;;;797:1;794;787:12;748:53;819:1;810:10;;829:133;843:2;840:1;837:9;829:133;;;931:14;;;927:23;;921:30;900:14;;;896:23;;889:63;854:10;;;;829:133;;;980:2;977:1;974:9;971:80;;;1039:1;1034:2;1029;1021:6;1017:15;1013:24;1006:35;971:80;1069:6;196:885;-1:-1:-1;;;;;;196:885:8:o;1086:857::-;1221:6;1229;1237;1245;1253;1261;1314:3;1302:9;1293:7;1289:23;1285:33;1282:53;;;1331:1;1328;1321:12;1282:53;1354:16;;1414:2;1399:18;;1393:25;1354:16;;-1:-1:-1;;;;;;1467:14:8;;;1464:34;;;1494:1;1491;1484:12;1464:34;1517:61;1570:7;1561:6;1550:9;1546:22;1517:61;:::i;:::-;1507:71;;1624:2;1613:9;1609:18;1603:25;1587:41;;1653:2;1643:8;1640:16;1637:36;;;1669:1;1666;1659:12;1637:36;;1692:63;1747:7;1736:8;1725:9;1721:24;1692:63;:::i;:::-;1682:73;;;1795:2;1784:9;1780:18;1774:25;1764:35;;1818:50;1863:3;1852:9;1848:19;1818:50;:::i;:::-;1808:60;;1887:50;1932:3;1921:9;1917:19;1887:50;:::i;:::-;1877:60;;1086:857;;;;;;;;:::o;1948:380::-;2027:1;2023:12;;;;2070;;;2091:61;;2145:4;2137:6;2133:17;2123:27;;2091:61;2198:2;2190:6;2187:14;2167:18;2164:38;2161:161;;;2244:10;2239:3;2235:20;2232:1;2225:31;2279:4;2276:1;2269:15;2307:4;2304:1;2297:15;2161:161;;1948:380;;;:::o;2333:127::-;2394:10;2389:3;2385:20;2382:1;2375:31;2425:4;2422:1;2415:15;2449:4;2446:1;2439:15;2333:127;1260:3222:7;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 3568,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_474": {
									"entryPoint": 3952,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 5181,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 4385,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 4568,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@amountRaised_882": {
									"entryPoint": null,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@amountUntilReachTarget_1018": {
									"entryPoint": 3550,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 1234,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@coin_875": {
									"entryPoint": null,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dataAccessThreshold_884": {
									"entryPoint": null,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_948": {
									"entryPoint": 2445,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 3353,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 2613,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@invest_1089": {
									"entryPoint": 1685,
									"id": 1089,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@kill_1007": {
									"entryPoint": 2689,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@killed_890": {
									"entryPoint": null,
									"id": 890,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_54": {
									"entryPoint": 1088,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onERC721Received_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@pause_997": {
									"entryPoint": 3132,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@projectMarketplace_878": {
									"entryPoint": null,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@redeemNFT_1173": {
									"entryPoint": 2844,
									"id": 1173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_64": {
									"entryPoint": 3338,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@targetAmount_880": {
									"entryPoint": null,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 1649,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 3536,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdrawInvestment_1131": {
									"entryPoint": 1258,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Extented_$870__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$804__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2581b1427edf8c40f5befb3931a66ae1e24674307b76535e01fb1432198ee9ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6990363dc6c42cdaa9cd8c906d3b5b9161e05276ca16ae04ae731843302a3c68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7af8217c35f176a33316517d02b08565f8969c0aea40184a2c4e9b2abf9b356d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7b9cc13ec0b489fd142f081d5b12d42981606b74fef6982976a24a2c6cfa9863__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8adb99af62dac0fce1074ed978464b907f5354493d95e0f43fd5b8e35f739f97__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a464dbc44826ceeac304f4f9e62b275a1e756d34893e60c3ed6d23964bf112b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12811:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:8"
															},
															"nodeType": "YulIf",
															"src": "111:93:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:196:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:8"
															},
															"nodeType": "YulIf",
															"src": "295:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:8",
														"type": ""
													}
												],
												"src": "215:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:8"
															},
															"nodeType": "YulIf",
															"src": "503:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:8",
														"type": ""
													}
												],
												"src": "406:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:8"
															},
															"nodeType": "YulIf",
															"src": "785:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:8",
														"type": ""
													}
												],
												"src": "671:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1144:668:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1191:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1200:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1203:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1193:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1193:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1193:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1165:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1174:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1161:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1186:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1157:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1157:33:8"
															},
															"nodeType": "YulIf",
															"src": "1154:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1216:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1226:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1264:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1297:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1308:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1274:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1264:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1321:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1348:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1344:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1344:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1331:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1321:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1372:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1399:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1386:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1376:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1427:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1437:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1431:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1482:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1484:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1484:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1470:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1467:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:14:8"
															},
															"nodeType": "YulIf",
															"src": "1464:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1507:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1521:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1532:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1511:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1587:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1599:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1589:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1589:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1566:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1570:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1562:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1562:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1577:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1551:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1551:35:8"
															},
															"nodeType": "YulIf",
															"src": "1548:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1612:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1639:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1626:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1616:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1669:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1678:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1681:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1671:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1671:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1671:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1657:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1665:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1654:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1654:14:8"
															},
															"nodeType": "YulIf",
															"src": "1651:34:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1708:2:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1712:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1700:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1726:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1697:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:37:8"
															},
															"nodeType": "YulIf",
															"src": "1694:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1760:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1774:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:11:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1790:16:8",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1800:6:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1109:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1117:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1125:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1133:6:8",
														"type": ""
													}
												],
												"src": "1004:808:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1904:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1950:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1925:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1934:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:32:8"
															},
															"nodeType": "YulIf",
															"src": "1914:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1975:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2004:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1985:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2050:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2061:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2033:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1862:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1873:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1885:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1893:6:8",
														"type": ""
													}
												],
												"src": "1817:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2154:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2200:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2209:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2212:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2202:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2202:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2202:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2196:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:32:8"
															},
															"nodeType": "YulIf",
															"src": "2164:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2225:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2238:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2229:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2307:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2316:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2319:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2309:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2309:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2309:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2276:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2297:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2290:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2290:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2283:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2283:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2273:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:40:8"
															},
															"nodeType": "YulIf",
															"src": "2263:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2332:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2342:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2332:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2120:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2131:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2143:6:8",
														"type": ""
													}
												],
												"src": "2076:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2428:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2474:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2486:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2476:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2476:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2476:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2449:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2458:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2445:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2441:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:32:8"
															},
															"nodeType": "YulIf",
															"src": "2438:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2499:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2522:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2509:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2394:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2405:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2417:6:8",
														"type": ""
													}
												],
												"src": "2358:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:194:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nodeType": "YulIf",
															"src": "2632:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2693:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2712:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2706:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2706:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2697:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2770:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2779:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2782:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2772:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2772:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2772:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2744:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2755:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2762:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2751:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2751:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2741:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2741:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:35:8"
															},
															"nodeType": "YulIf",
															"src": "2731:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2795:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2805:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2588:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2599:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2611:6:8",
														"type": ""
													}
												],
												"src": "2543:273:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2978:241:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2988:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3000:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3011:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2988:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3023:52:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3033:42:8",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3027:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3091:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3114:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3102:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3102:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3149:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3158:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3166:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3154:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3127:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3127:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3190:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3201:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3206:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3179:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2931:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2942:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2950:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2958:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2969:4:8",
														"type": ""
													}
												],
												"src": "2821:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:168:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3363:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3375:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3386:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3371:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3363:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3405:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3420:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3428:42:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3416:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3416:55:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:74:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3398:74:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3508:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3314:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3325:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3333:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3344:4:8",
														"type": ""
													}
												],
												"src": "3224:297:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3621:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3631:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3643:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3639:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3631:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3673:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3698:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3691:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3684:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3684:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3590:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3601:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3612:4:8",
														"type": ""
													}
												],
												"src": "3526:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3817:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3827:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3839:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3835:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3827:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3869:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3884:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3892:66:8",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3880:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3880:79:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3862:98:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3862:98:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3786:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3797:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3808:4:8",
														"type": ""
													}
												],
												"src": "3718:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4094:125:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4104:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4116:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4127:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4112:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4112:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4104:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4146:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4161:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:42:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4157:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4157:55:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:74:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4139:74:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Extented_$870__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4063:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4074:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4085:4:8",
														"type": ""
													}
												],
												"src": "3971:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4340:125:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4350:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4362:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4373:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4350:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4392:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4407:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:42:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:55:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:74:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:74:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$804__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4309:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4320:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4331:4:8",
														"type": ""
													}
												],
												"src": "4224:241:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:535:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4601:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4611:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4605:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4629:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4640:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4622:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4622:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4652:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4672:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4666:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4656:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4699:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4710:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4695:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4715:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4688:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4731:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4740:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4735:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4800:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "4829:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4840:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4825:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4825:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4844:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4821:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4821:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "4863:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4871:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4859:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4859:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4875:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4855:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4855:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4849:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4849:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4761:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4764:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4758:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4772:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4774:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4783:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4786:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4779:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4779:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4774:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4754:3:8",
																"statements": []
															},
															"src": "4750:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4924:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "4953:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "4964:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4949:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4949:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4973:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4945:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4945:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4978:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4938:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4938:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4938:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4905:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4908:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4902:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4902:13:8"
															},
															"nodeType": "YulIf",
															"src": "4899:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4999:121:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5034:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5042:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5030:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5030:15:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5047:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5026:88:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:104:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5117:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5007:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5007:113:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4999:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4560:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4571:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:8",
														"type": ""
													}
												],
												"src": "4470:656:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5305:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5315:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5356:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5367:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5352:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5406:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5391:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5411:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5384:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5466:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5477:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5462:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5462:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5482:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5455:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5497:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5509:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5520:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5505:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5497:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5282:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5296:4:8",
														"type": ""
													}
												],
												"src": "5131:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5709:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5726:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5737:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5760:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5771:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5756:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5776:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5749:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5799:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5810:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5795:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5815:34:8",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5788:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5788:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5881:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5866:18:8"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5886:4:8",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5859:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5859:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5900:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5912:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5923:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5900:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5686:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5700:4:8",
														"type": ""
													}
												],
												"src": "5535:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6112:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6129:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6140:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6122:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6122:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6163:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6174:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6159:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6159:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6179:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6152:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6152:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6152:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6202:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6213:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6198:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6218:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6191:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6273:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6284:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6269:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6289:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6262:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6262:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6303:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6315:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6326:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6311:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6303:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6089:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6103:4:8",
														"type": ""
													}
												],
												"src": "5938:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6515:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6532:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6525:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6525:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6525:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6566:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6577:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6562:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6582:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6555:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6605:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6616:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6601:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6601:18:8"
																	},
																	{
																		"hexValue": "446f204e6f7420486176652052465420546f74616c20537570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6621:30:8",
																		"type": "",
																		"value": "Do Not Have RFT Total Supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6594:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6594:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6594:58:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2581b1427edf8c40f5befb3931a66ae1e24674307b76535e01fb1432198ee9ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6492:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6506:4:8",
														"type": ""
													}
												],
												"src": "6341:352:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6872:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6889:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6900:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6882:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6934:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6939:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6912:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6973:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:18:8"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6978:31:8",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6951:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6951:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7019:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7031:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7042:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7027:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7019:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6849:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6863:4:8",
														"type": ""
													}
												],
												"src": "6698:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7230:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7247:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7258:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7240:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7240:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7281:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7277:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7297:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7270:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7270:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7320:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7331:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7316:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7316:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7336:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7309:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7391:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7402:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7387:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7407:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7380:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7380:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7425:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7437:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7448:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7425:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7207:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7221:4:8",
														"type": ""
													}
												],
												"src": "7056:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7637:168:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7665:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7647:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7647:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7688:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7699:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7684:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7684:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7677:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7677:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7677:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7727:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7738:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:18:8"
																	},
																	{
																		"hexValue": "436f6e7472616374204973204b696c6c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7743:20:8",
																		"type": "",
																		"value": "Contract Is Killed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7716:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7773:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7785:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7796:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7781:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7773:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6990363dc6c42cdaa9cd8c906d3b5b9161e05276ca16ae04ae731843302a3c68__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7614:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7628:4:8",
														"type": ""
													}
												],
												"src": "7463:342:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7984:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8001:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8012:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7994:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7994:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8035:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8046:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8031:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8031:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8051:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8024:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8024:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8024:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8085:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:18:8"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820736861726573206c65667421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8090:25:8",
																		"type": "",
																		"value": "Not enough shares left!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8063:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8063:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8125:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8137:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8148:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8133:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8125:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7af8217c35f176a33316517d02b08565f8969c0aea40184a2c4e9b2abf9b356d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7961:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7975:4:8",
														"type": ""
													}
												],
												"src": "7810:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8336:168:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8353:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8364:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8346:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8346:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8387:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8398:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8383:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8403:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8376:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8376:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8376:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8426:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8437:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8422:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8422:18:8"
																	},
																	{
																		"hexValue": "436f6e747261637420497320506175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8442:20:8",
																		"type": "",
																		"value": "Contract Is Paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8415:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8415:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8415:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8472:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8484:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8495:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8480:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8480:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8472:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7b9cc13ec0b489fd142f081d5b12d42981606b74fef6982976a24a2c6cfa9863__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8313:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8327:4:8",
														"type": ""
													}
												],
												"src": "8162:342:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8683:171:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8700:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8711:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8693:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8693:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8745:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8730:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8750:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8723:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8723:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8773:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8784:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:18:8"
																	},
																	{
																		"hexValue": "54617267657420416c726561647920526169736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8789:23:8",
																		"type": "",
																		"value": "Target Already Raised"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8762:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8762:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8762:51:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8822:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8834:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8845:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8830:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8830:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8822:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8660:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8674:4:8",
														"type": ""
													}
												],
												"src": "8509:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9033:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9050:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9043:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9043:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9043:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9084:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9095:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9080:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9100:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9073:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9073:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9123:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9134:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9119:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:18:8"
																	},
																	{
																		"hexValue": "4f6e6c792041646d696e2043616e2050617573652f556e7061757365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9139:30:8",
																		"type": "",
																		"value": "Only Admin Can Pause/Unpause"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9112:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:58:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9179:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9191:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9202:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9179:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8adb99af62dac0fce1074ed978464b907f5354493d95e0f43fd5b8e35f739f97__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9010:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9024:4:8",
														"type": ""
													}
												],
												"src": "8859:352:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9390:175:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9407:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9418:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9400:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9400:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9441:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9452:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9437:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9457:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9430:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9430:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9430:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9480:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9491:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9476:18:8"
																	},
																	{
																		"hexValue": "4e6f7420477265617420456e6f7567682042616c616e636521",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9496:27:8",
																		"type": "",
																		"value": "Not Great Enough Balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9469:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9469:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9533:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9545:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9541:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9541:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9533:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a464dbc44826ceeac304f4f9e62b275a1e756d34893e60c3ed6d23964bf112b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9367:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9381:4:8",
														"type": ""
													}
												],
												"src": "9216:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9744:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9761:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9772:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9754:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9754:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9754:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9795:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9806:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9791:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9791:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9811:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9784:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9784:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9784:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9834:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9845:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9830:18:8"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9850:34:8",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9823:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9905:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9916:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9901:18:8"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9921:3:8",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9894:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9894:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9934:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9946:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9942:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9934:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9721:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9735:4:8",
														"type": ""
													}
												],
												"src": "9570:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10146:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10163:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10174:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10156:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10197:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10208:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10193:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10193:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10213:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10186:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10186:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10186:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10236:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10247:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10232:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10232:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10252:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10225:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10307:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10318:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10303:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10303:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10323:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10296:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10296:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10340:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10352:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10363:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10348:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10348:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10340:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10123:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10137:4:8",
														"type": ""
													}
												],
												"src": "9972:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10552:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10569:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10580:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10562:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10562:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10562:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10603:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10614:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10599:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10599:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10619:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10592:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10592:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10592:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10642:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10653:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10638:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10658:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10631:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10631:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10713:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10724:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10709:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10709:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10729:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10702:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10702:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10702:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10745:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10757:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10768:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10753:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10753:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10745:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10529:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10543:4:8",
														"type": ""
													}
												],
												"src": "10378:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10957:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10974:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10985:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10967:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10967:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11008:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11019:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11004:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11004:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11024:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10997:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10997:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10997:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11047:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11058:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11043:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11043:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11063:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11036:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11036:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11036:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11118:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11129:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11114:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11114:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11134:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11107:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11107:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11107:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11151:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11163:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11174:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11159:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11159:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11151:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10934:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10948:4:8",
														"type": ""
													}
												],
												"src": "10783:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11363:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11380:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11391:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11373:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11373:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11373:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11414:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11425:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11410:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11410:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11430:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11403:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11403:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11403:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11453:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11464:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11449:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11449:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11469:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11442:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11442:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11442:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11512:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11524:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11535:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11520:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11512:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11340:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11354:4:8",
														"type": ""
													}
												],
												"src": "11189:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11650:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11660:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11672:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11683:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11668:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11660:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11702:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11713:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11695:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11695:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11695:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11619:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11630:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11641:4:8",
														"type": ""
													}
												],
												"src": "11549:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11828:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11838:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11850:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11861:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11846:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11846:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11838:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11880:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11895:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11903:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11891:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11891:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11873:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11873:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11873:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11797:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11808:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11819:4:8",
														"type": ""
													}
												],
												"src": "11731:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11968:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11995:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11997:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11997:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11997:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11984:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11991:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11987:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11981:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11981:13:8"
															},
															"nodeType": "YulIf",
															"src": "11978:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12026:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12037:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12040:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12033:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12026:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11951:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11954:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11960:3:8",
														"type": ""
													}
												],
												"src": "11920:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12102:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12124:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12126:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12126:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12126:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12118:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12121:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12115:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12115:8:8"
															},
															"nodeType": "YulIf",
															"src": "12112:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12155:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12167:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12170:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12163:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12163:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12155:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12084:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12087:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12093:4:8",
														"type": ""
													}
												],
												"src": "12053:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12238:382:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12248:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12262:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12265:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12258:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12258:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12248:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12279:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12309:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12315:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12305:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12305:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12283:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12356:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12358:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12372:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12380:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12368:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12368:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12358:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12336:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12329:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12329:26:8"
															},
															"nodeType": "YulIf",
															"src": "12326:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12446:168:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12467:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12470:77:8",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12460:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12460:88:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12460:88:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12568:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12571:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12561:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12561:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12561:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12596:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12599:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12589:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12589:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12402:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12425:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12433:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12422:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12422:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12399:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12399:38:8"
															},
															"nodeType": "YulIf",
															"src": "12396:218:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12218:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12227:6:8",
														"type": ""
													}
												],
												"src": "12183:437:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12657:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12674:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12677:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12667:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12667:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12771:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12774:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12764:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12764:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12764:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12795:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12788:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12788:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12788:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12625:184:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Extented_$870__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$804__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2581b1427edf8c40f5befb3931a66ae1e24674307b76535e01fb1432198ee9ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Do Not Have RFT Total Supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6990363dc6c42cdaa9cd8c906d3b5b9161e05276ca16ae04ae731843302a3c68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Contract Is Killed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7af8217c35f176a33316517d02b08565f8969c0aea40184a2c4e9b2abf9b356d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not enough shares left!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7b9cc13ec0b489fd142f081d5b12d42981606b74fef6982976a24a2c6cfa9863__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Contract Is Paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Target Already Raised\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8adb99af62dac0fce1074ed978464b907f5354493d95e0f43fd5b8e35f739f97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Only Admin Can Pause/Unpause\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a464dbc44826ceeac304f4f9e62b275a1e756d34893e60c3ed6d23964bf112b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Not Great Enough Balance!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"878": [
									{
										"length": 32,
										"start": 913
									},
									{
										"length": 32,
										"start": 3017
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a35760003560e01c806341c0e1b5116100ee5780638456cb5911610097578063a457c2d711610071578063a457c2d7146103cc578063a9059cbb146103df578063bdf89682146103f2578063dd62ed3e146103fa57600080fd5b80638456cb59146103b3578063953b8fb8146103bb57806395d89b41146103c457600080fd5b806377262d38116100c857806377262d381461037b5780637b3e5e7b146103835780637e0d73d41461038c57600080fd5b806341c0e1b5146103305780635c975abb1461033857806370a082311461034557600080fd5b80631f3a0e41116101505780632afcf4801161012a5780632afcf480146102f0578063313ce56714610303578063395093511461031d57600080fd5b80631f3a0e41146102b65780632037fcbf146102c857806323b872dd146102dd57600080fd5b806311df99951161018157806311df999514610200578063150b7a021461024557806318160ddd146102ae57600080fd5b806306fdde03146101a857806306febe00146101c6578063095ea7b3146101dd575b600080fd5b6101b0610440565b6040516101bd9190611720565b60405180910390f35b6101cf60085481565b6040519081526020016101bd565b6101f06101eb366004611698565b6104d2565b60405190151581526020016101bd565b6005546102209073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bd565b61027d6102533660046115fd565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016101bd565b6002546101cf565b6009546101f090610100900460ff1681565b6102db6102d63660046116e4565b6104ea565b005b6101f06102eb3660046115c1565b610671565b6102db6102fe3660046116e4565b610695565b61030b61098d565b60405160ff90911681526020016101bd565b6101f061032b366004611698565b610a35565b6102db610a81565b6009546101f09060ff1681565b6101cf61035336600461156c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6102db610b1c565b6101cf60075481565b6102207f000000000000000000000000000000000000000000000000000000000000000081565b6102db610c3c565b6101cf60065481565b6101b0610d0a565b6101f06103da366004611698565b610d19565b6101f06103ed366004611698565b610dd0565b6101cf610dde565b6101cf61040836600461158e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461044f906117c2565b80601f016020809104026020016040519081016040528092919081815260200182805461047b906117c2565b80156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b5050505050905090565b6000336104e0818585610df0565b5060019392505050565b600654600254106105425760405162461bcd60e51b815260206004820152601560248201527f54617267657420416c726561647920526169736564000000000000000000000060448201526064015b60405180910390fd5b336000908152602081905260409020548111156105a15760405162461bcd60e51b815260206004820152601960248201527f4e6f7420477265617420456e6f7567682042616c616e636521000000000000006044820152606401610539565b6005546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90604401602060405180830381600087803b15801561061357600080fd5b505af1158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b91906116c2565b50806007600082825461065e91906117ab565b9091555061066e90503382610f70565b50565b60003361067f858285611121565b61068a8585856111d8565b506001949350505050565b600654600254106106e85760405162461bcd60e51b815260206004820152601560248201527f54617267657420416c72656164792052616973656400000000000000000000006044820152606401610539565b6002546006546106f891906117ab565b8111156107475760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820736861726573206c656674210000000000000000006044820152606401610539565b60095460ff161561079a5760405162461bcd60e51b815260206004820152601260248201527f436f6e74726163742049732050617573656400000000000000000000000000006044820152606401610539565b600954610100900460ff16156107f25760405162461bcd60e51b815260206004820152601260248201527f436f6e7472616374204973204b696c6c656400000000000000000000000000006044820152606401610539565b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b15801561086a57600080fd5b505af115801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a291906116c2565b5080600760008282546108b59190611793565b909155506108c59050338261143d565b600254600654141561066e576005546009546006546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff6201000090930483166004820152602481019190915291169063a9059cbb90604401602060405180830381600087803b15801561095157600080fd5b505af1158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098991906116c2565b5050565b600554604080517f313ce567000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163313ce567916004808301926020929190829003018186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3091906116fd565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104e09082908690610a7c908790611793565b610df0565b60095462010000900473ffffffffffffffffffffffffffffffffffffffff163314610aee5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792041646d696e2043616e2050617573652f556e7061757365000000006044820152606401610539565b600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6006543360009081526020819052604090205414610b7c5760405162461bcd60e51b815260206004820152601c60248201527f446f204e6f7420486176652052465420546f74616c20537570706c79000000006044820152606401610539565b610b8e33610b8960025490565b610f70565b6040517f42842e0e000000000000000000000000000000000000000000000000000000008152306004820181905233602483015260448201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342842e0e90606401600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b50505050565b60095462010000900473ffffffffffffffffffffffffffffffffffffffff163314610ca95760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c792041646d696e2043616e2050617573652f556e7061757365000000006044820152606401610539565b60095460ff16610ce057600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b600980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60606004805461044f906117c2565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610dc35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610539565b61068a8286868403610df0565b6000336104e08185856111d8565b6000600754600654610a3091906117ab565b73ffffffffffffffffffffffffffffffffffffffff8316610e785760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216610f015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ff95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054818110156110955760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604081208383039055600280548492906110d19084906117ab565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f63565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c3657818110156111cb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610539565b610c368484848403610df0565b73ffffffffffffffffffffffffffffffffffffffff83166112615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff82166112ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156113865760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906113ca908490611793565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161143091815260200190565b60405180910390a3610c36565b73ffffffffffffffffffffffffffffffffffffffff82166114a05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610539565b80600260008282546114b29190611793565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080548392906114ec908490611793565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461156757600080fd5b919050565b60006020828403121561157e57600080fd5b61158782611543565b9392505050565b600080604083850312156115a157600080fd5b6115aa83611543565b91506115b860208401611543565b90509250929050565b6000806000606084860312156115d657600080fd5b6115df84611543565b92506115ed60208501611543565b9150604084013590509250925092565b60008060008060006080868803121561161557600080fd5b61161e86611543565b945061162c60208701611543565b935060408601359250606086013567ffffffffffffffff8082111561165057600080fd5b818801915088601f83011261166457600080fd5b81358181111561167357600080fd5b89602082850101111561168557600080fd5b9699959850939650602001949392505050565b600080604083850312156116ab57600080fd5b6116b483611543565b946020939093013593505050565b6000602082840312156116d457600080fd5b8151801515811461158757600080fd5b6000602082840312156116f657600080fd5b5035919050565b60006020828403121561170f57600080fd5b815160ff8116811461158757600080fd5b600060208083528351808285015260005b8181101561174d57858101830151858201604001528201611731565b8181111561175f576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082198211156117a6576117a6611816565b500190565b6000828210156117bd576117bd611816565b500390565b600181811c908216806117d657607f821691505b60208210811415611810577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212204b461779ad5fe4b830de988dcb1c63f08a6fecc43df95921c99081c07080430a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xBDF89682 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x953B8FB8 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77262D38 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x77262D38 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x7B3E5E7B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x7E0D73D4 EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F3A0E41 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x2AFCF480 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x2AFCF480 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F3A0E41 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x2037FCBF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11DF9995 GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x11DF9995 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6FEBE00 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B0 PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x220 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x27D PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FD JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1F0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x15C1 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH2 0x30B PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1F0 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x220 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x1CF PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x1CF PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x1CF PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x158E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x17C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47B SWAP1 PUSH2 0x17C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x542 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420416C7265616479205261697365640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420477265617420456E6F7567682042616C616E63652100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x66E SWAP1 POP CALLER DUP3 PUSH2 0xF70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x67F DUP6 DUP3 DUP6 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x68A DUP6 DUP6 DUP6 PUSH2 0x11D8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x2 SLOAD LT PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420416C7265616479205261697365640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820736861726573206C65667421000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204973205061757365640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374204973204B696C6C65640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8C5 SWAP1 POP CALLER DUP3 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x66E JUMPI PUSH1 0x5 SLOAD PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH3 0x10000 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x965 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x16FD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x4E0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0xA7C SWAP1 DUP8 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2043616E2050617573652F556E706175736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD EQ PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446F204E6F7420486176652052465420546F74616C20537570706C7900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH2 0xB8E CALLER PUSH2 0xB89 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2043616E2050617573652F556E706175736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND PUSH2 0xCE0 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x17C2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH2 0x68A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x10D1 SWAP1 DUP5 SWAP1 PUSH2 0x17AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF63 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC36 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST PUSH2 0xC36 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xDF0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x539 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x13CA SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1430 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x14A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x539 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14B2 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x14EC SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1587 DUP3 PUSH2 0x1543 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15AA DUP4 PUSH2 0x1543 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B8 PUSH1 0x20 DUP5 ADD PUSH2 0x1543 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15DF DUP5 PUSH2 0x1543 JUMP JUMPDEST SWAP3 POP PUSH2 0x15ED PUSH1 0x20 DUP6 ADD PUSH2 0x1543 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161E DUP7 PUSH2 0x1543 JUMP JUMPDEST SWAP5 POP PUSH2 0x162C PUSH1 0x20 DUP8 ADD PUSH2 0x1543 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B4 DUP4 PUSH2 0x1543 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x174D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1731 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x17A6 JUMPI PUSH2 0x17A6 PUSH2 0x1816 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x17BD JUMPI PUSH2 0x17BD PUSH2 0x1816 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1810 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B CHAINID OR PUSH26 0xAD5FE4B830DE988DCB1C63F08A6FECC43DF95921C99081C07080 NUMBER EXP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1260:3222:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1577:34:7;;;;;;;;;11695:25:8;;;11683:2;11668:18;1577:34:7;11549:177:8;4433:197:0;;;;;;:::i;:::-;;:::i;:::-;;;3691:14:8;;3684:22;3666:41;;3654:2;3639:18;4433:197:0;3526:187:8;1296:26:7;;;;;;;;;;;;4169:42:8;4157:55;;;4139:74;;4127:2;4112:18;1296:26:7;3971:248:8;2459:165:7;;;;;;:::i;:::-;2576:41;2459:165;;;;;;;;;;;3892:66:8;3880:79;;;3862:98;;3850:2;3835:18;2459:165:7;3718:248:8;3244:106:0;3331:12;;3244:106;;1735:26:7;;;;;;;;;;;;3678:408;;;;;;:::i;:::-;;:::i;:::-;;5192:286:0;;;;;;:::i;:::-;;:::i;3040:535:7:-;;;;;;:::i;:::-;;:::i;2158:104::-;;;:::i;:::-;;;11903:4:8;11891:17;;;11873:36;;11861:2;11846:18;2158:104:7;11731:184:8;5873:234:0;;;;;;:::i;:::-;;:::i;2790:65:7:-;;;:::i;1702:26::-;;;;;;;;;3408:125:0;;;;;;:::i;:::-;3508:18;;3482:7;3508:18;;;;;;;;;;;;3408:125;4204:276:7;;;:::i;1544:27::-;;;;;;1388:43;;;;;2630:154;;;:::i;1511:27::-;;;;;;2367:102:0;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;2861:117:7:-;;;:::i;3976:149:0:-;;;;;;:::i;:::-;4091:18;;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:5;4570:32:0;719:10:5;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;3678:408:7:-;3765:12;;3331::0;;3749:28:7;3740:65;;;;-1:-1:-1;;;3740:65:7;;8711:2:8;3740:65:7;;;8693:21:8;8750:2;8730:18;;;8723:30;8789:23;8769:18;;;8762:51;8830:18;;3740:65:7;;;;;;;;;3842:10;3482:7:0;3508:18;;;;;;;;;;;3823:5:7;:30;;3815:68;;;;-1:-1:-1;;;3815:68:7;;9418:2:8;3815:68:7;;;9400:21:8;9457:2;9437:18;;;9430:30;9496:27;9476:18;;;9469:55;9541:18;;3815:68:7;9216:349:8;3815:68:7;3982:4;;:32;;;;;3996:10;3982:32;;;3398:74:8;3488:18;;;3481:34;;;3982:4:7;;;;;:13;;3371:18:8;;3982:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4040:5;4024:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;4055:24:7;;-1:-1:-1;4061:10:7;4073:5;4055;:24::i;:::-;3678:408;:::o;5192:286:0:-;5319:4;719:10:5;5375:38:0;5391:4;719:10:5;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;3040:535:7:-;3115:12;;3331::0;;3099:28:7;3090:64;;;;-1:-1:-1;;;3090:64:7;;8711:2:8;3090:64:7;;;8693:21:8;8750:2;8730:18;;;8723:30;8789:23;8769:18;;;8762:51;8830:18;;3090:64:7;8509:345:8;3090:64:7;3331:12:0;;3181::7;;:28;;;;:::i;:::-;3172:5;:37;;3164:73;;;;-1:-1:-1;;;3164:73:7;;8012:2:8;3164:73:7;;;7994:21:8;8051:2;8031:18;;;8024:30;8090:25;8070:18;;;8063:53;8133:18;;3164:73:7;7810:347:8;3164:73:7;3257:6;;;;3256:7;3247:40;;;;-1:-1:-1;;;3247:40:7;;8364:2:8;3247:40:7;;;8346:21:8;8403:2;8383:18;;;8376:30;8442:20;8422:18;;;8415:48;8480:18;;3247:40:7;8162:342:8;3247:40:7;3307:6;;;;;;;3306:7;3297:39;;;;-1:-1:-1;;;3297:39:7;;7665:2:8;3297:39:7;;;7647:21:8;7704:2;7684:18;;;7677:30;7743:20;7723:18;;;7716:48;7781:18;;3297:39:7;7463:342:8;3297:39:7;3347:4;;:51;;;;;3365:10;3347:51;;;3084:34:8;3385:4:7;3134:18:8;;;3127:43;3186:18;;;3179:34;;;3347:4:7;;;;;:17;;2996:18:8;;3347:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3424:5;3408:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;3439:24:7;;-1:-1:-1;3445:10:7;3457:5;3439;:24::i;:::-;3331:12:0;;3478::7;;:29;3474:95;;;3524:4;;3538:5;;3545:12;;3524:34;;;;;:4;3538:5;;;;;;3524:34;;;3398:74:8;3488:18;;;3481:34;;;;3524:4:7;;;:13;;3371:18:8;;3524:34:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3040:535;:::o;2158:104::-;2240:4;;:15;;;;;;;;2216:5;;2240:4;;;:13;;:15;;;;;;;;;;;;;;:4;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2233:22;;2158:104;:::o;5873:234:0:-;719:10:5;5961:4:0;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5961:4;;719:10:5;6015:64:0;;719:10:5;;4091:27:0;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2790:65:7:-;2324:5;;;;;;;2310:10;:19;2302:60;;;;-1:-1:-1;;;2302:60:7;;9061:2:8;2302:60:7;;;9043:21:8;9100:2;9080:18;;;9073:30;9139;9119:18;;;9112:58;9187:18;;2302:60:7;8859:352:8;2302:60:7;2835:6:::1;:13:::0;;;::::1;;;::::0;;2790:65::o;4204:276::-;4278:12;;4263:10;3482:7:0;3508:18;;;;;;;;;;;4253:37:7;4244:80;;;;-1:-1:-1;;;4244:80:7;;6543:2:8;4244:80:7;;;6525:21:8;6582:2;6562:18;;;6555:30;6621;6601:18;;;6594:58;6669:18;;4244:80:7;6341:352:8;4244:80:7;4334:33;4340:10;4352:13;3331:12:0;;;3244:106;4352:13:7;4334:5;:33::i;:::-;4377:96;;;;;4422:4;4377:96;;;3084:34:8;;;4429:10:7;3134:18:8;;;3127:43;3186:18;;;3179:34;4377:18:7;:35;;;;;2996:18:8;;4377:96:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4204:276::o;2630:154::-;2324:5;;;;;;;2310:10;:19;2302:60;;;;-1:-1:-1;;;2302:60:7;;9061:2:8;2302:60:7;;;9043:21:8;9100:2;9080:18;;;9073:30;9139;9119:18;;;9112:58;9187:18;;2302:60:7;8859:352:8;2302:60:7;2681:6:::1;::::0;::::1;;2676:102;;2702:6;:13:::0;;;::::1;2711:4;2702:13;::::0;;2630:154::o;2676:102::-:1;2753:6;:14:::0;;;::::1;::::0;;2630:154::o;2367:102:0:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;719:10:5;6687:4:0;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6687:4;;719:10:5;6831:15:0;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;10985:2:8;6803:85:0;;;10967:21:8;11024:2;11004:18;;;10997:30;11063:34;11043:18;;;11036:62;11134:7;11114:18;;;11107:35;11159:19;;6803:85:0;10783:401:8;6803:85:0;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:5;3862:28:0;719:10:5;3879:2:0;3883:6;3862:9;:28::i;2861:117:7:-;2916:7;2957:12;;2942;;:27;;;;:::i;10110:370:0:-;10241:19;;;10233:68;;;;-1:-1:-1;;;10233:68:0;;10580:2:8;10233:68:0;;;10562:21:8;10619:2;10599:18;;;10592:30;10658:34;10638:18;;;10631:62;10729:6;10709:18;;;10702:34;10753:19;;10233:68:0;10378:400:8;10233:68:0;10319:21;;;10311:68;;;;-1:-1:-1;;;10311:68:0;;6140:2:8;10311:68:0;;;6122:21:8;6179:2;6159:18;;;6152:30;6218:34;6198:18;;;6191:62;6289:4;6269:18;;;6262:32;6311:19;;10311:68:0;5938:398:8;10311:68:0;10390:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;11695:25:8;;;10441:32:0;;11668:18:8;10441:32:0;;;;;;;;10110:370;;;:::o;9111:576::-;9194:21;;;9186:67;;;;-1:-1:-1;;;9186:67:0;;9772:2:8;9186:67:0;;;9754:21:8;9811:2;9791:18;;;9784:30;9850:34;9830:18;;;9823:62;9921:3;9901:18;;;9894:31;9942:19;;9186:67:0;9570:397:8;9186:67:0;9349:18;;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:0;;5737:2:8;9377:71:0;;;5719:21:8;5776:2;5756:18;;;5749:30;5815:34;5795:18;;;5788:62;5886:4;5866:18;;;5859:32;5908:19;;9377:71:0;5535:398:8;9377:71:0;9482:18;;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:0;;11695:25:8;;;9610:1:0;;9584:37;;;;;;11683:2:8;11668:18;9584:37:0;11549:177:8;10761:441:0;4091:18;;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10977:17;10957:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;6900:2:8;11010:68:0;;;6882:21:8;6939:2;6919:18;;;6912:30;6978:31;6958:18;;;6951:59;7027:18;;11010:68:0;6698:353:8;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;7475:651::-;7601:18;;;7593:68;;;;-1:-1:-1;;;7593:68:0;;10174:2:8;7593:68:0;;;10156:21:8;10213:2;10193:18;;;10186:30;10252:34;10232:18;;;10225:62;10323:7;10303:18;;;10296:35;10348:19;;7593:68:0;9972:401:8;7593:68:0;7679:16;;;7671:64;;;;-1:-1:-1;;;7671:64:0;;5333:2:8;7671:64:0;;;5315:21:8;5372:2;5352:18;;;5345:30;5411:34;5391:18;;;5384:62;5482:5;5462:18;;;5455:33;5505:19;;7671:64:0;5131:399:8;7671:64:0;7817:15;;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;7258:2:8;7842:72:0;;;7240:21:8;7297:2;7277:18;;;7270:30;7336:34;7316:18;;;7309:62;7407:8;7387:18;;;7380:36;7433:19;;7842:72:0;7056:402:8;7842:72:0;7948:15;;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;11695:25:8;;11683:2;11668:18;;11549:177;8045:26:0;;;;;;;;8082:37;9111:576;8402:389;8485:21;;;8477:65;;;;-1:-1:-1;;;8477:65:0;;11391:2:8;8477:65:0;;;11373:21:8;11430:2;11410:18;;;11403:30;11469:33;11449:18;;;11442:61;11520:18;;8477:65:0;11189:355:8;8477:65:0;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8645:18:0;;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:0;;11695:25:8;;;8688:37:0;;;;8705:1;;8688:37;;11683:2:8;11668:18;8688:37:0;;;;;;;3524:34:7;3040:535;:::o;14:196:8:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:8:o;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:52;;;551:1;548;541:12;503:52;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;406:260;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;671:328;;;;;:::o;1004:808::-;1101:6;1109;1117;1125;1133;1186:3;1174:9;1165:7;1161:23;1157:33;1154:53;;;1203:1;1200;1193:12;1154:53;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1274:38;1308:2;1297:9;1293:18;1274:38;:::i;:::-;1264:48;;1359:2;1348:9;1344:18;1331:32;1321:42;;1414:2;1403:9;1399:18;1386:32;1437:18;1478:2;1470:6;1467:14;1464:34;;;1494:1;1491;1484:12;1464:34;1532:6;1521:9;1517:22;1507:32;;1577:7;1570:4;1566:2;1562:13;1558:27;1548:55;;1599:1;1596;1589:12;1548:55;1639:2;1626:16;1665:2;1657:6;1654:14;1651:34;;;1681:1;1678;1671:12;1651:34;1726:7;1721:2;1712:6;1708:2;1704:15;1700:24;1697:37;1694:57;;;1747:1;1744;1737:12;1694:57;1004:808;;;;-1:-1:-1;1004:808:8;;-1:-1:-1;1778:2:8;1770:11;;1800:6;1004:808;-1:-1:-1;;;1004:808:8:o;1817:254::-;1885:6;1893;1946:2;1934:9;1925:7;1921:23;1917:32;1914:52;;;1962:1;1959;1952:12;1914:52;1985:29;2004:9;1985:29;:::i;:::-;1975:39;2061:2;2046:18;;;;2033:32;;-1:-1:-1;;;1817:254:8:o;2076:277::-;2143:6;2196:2;2184:9;2175:7;2171:23;2167:32;2164:52;;;2212:1;2209;2202:12;2164:52;2244:9;2238:16;2297:5;2290:13;2283:21;2276:5;2273:32;2263:60;;2319:1;2316;2309:12;2358:180;2417:6;2470:2;2458:9;2449:7;2445:23;2441:32;2438:52;;;2486:1;2483;2476:12;2438:52;-1:-1:-1;2509:23:8;;2358:180;-1:-1:-1;2358:180:8:o;2543:273::-;2611:6;2664:2;2652:9;2643:7;2639:23;2635:32;2632:52;;;2680:1;2677;2670:12;2632:52;2712:9;2706:16;2762:4;2755:5;2751:16;2744:5;2741:27;2731:55;;2782:1;2779;2772:12;4470:656;4582:4;4611:2;4640;4629:9;4622:21;4672:6;4666:13;4715:6;4710:2;4699:9;4695:18;4688:34;4740:1;4750:140;4764:6;4761:1;4758:13;4750:140;;;4859:14;;;4855:23;;4849:30;4825:17;;;4844:2;4821:26;4814:66;4779:10;;4750:140;;;4908:6;4905:1;4902:13;4899:91;;;4978:1;4973:2;4964:6;4953:9;4949:22;4945:31;4938:42;4899:91;-1:-1:-1;5042:2:8;5030:15;5047:66;5026:88;5011:104;;;;5117:2;5007:113;;4470:656;-1:-1:-1;;;4470:656:8:o;11920:128::-;11960:3;11991:1;11987:6;11984:1;11981:13;11978:39;;;11997:18;;:::i;:::-;-1:-1:-1;12033:9:8;;11920:128::o;12053:125::-;12093:4;12121:1;12118;12115:8;12112:34;;;12126:18;;:::i;:::-;-1:-1:-1;12163:9:8;;12053:125::o;12183:437::-;12262:1;12258:12;;;;12305;;;12326:61;;12380:4;12372:6;12368:17;12358:27;;12326:61;12433:2;12425:6;12422:14;12402:18;12399:38;12396:218;;;12470:77;12467:1;12460:88;12571:4;12568:1;12561:15;12599:4;12596:1;12589:15;12396:218;;12183:437;;;:::o;12625:184::-;12677:77;12674:1;12667:88;12774:4;12771:1;12764:15;12798:4;12795:1;12788:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1253400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"amountRaised()": "2362",
								"amountUntilReachTarget()": "4573",
								"approve(address,uint256)": "24645",
								"balanceOf(address)": "2606",
								"coin()": "2359",
								"dataAccessThreshold()": "2364",
								"decimals()": "infinite",
								"decreaseAllowance(address,uint256)": "26885",
								"increaseAllowance(address,uint256)": "26975",
								"invest(uint256)": "infinite",
								"kill()": "26550",
								"killed()": "2367",
								"name()": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"pause()": "28671",
								"paused()": "2378",
								"projectMarketplace()": "infinite",
								"redeemNFT()": "infinite",
								"symbol()": "infinite",
								"targetAmount()": "2362",
								"totalSupply()": "2382",
								"transfer(address,uint256)": "51164",
								"transferFrom(address,address,uint256)": "infinite",
								"withdrawInvestment(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1728,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1702,
									"end": 1728,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1728,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1735,
									"end": 1761,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1735,
									"end": 1761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1735,
									"end": 1761,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1787,
									"end": 2152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1930,
									"end": 1934,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1936,
									"end": 1942,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1936,
									"end": 1942,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1954,
									"end": 1975,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1954,
									"end": 1975,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1954,
									"end": 1975,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1954,
									"end": 1975,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2027,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2027,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2027,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2027,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "PUSH",
									"source": 7,
									"value": "10000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2051,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2065,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2095,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2134,
									"end": 2144,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 2105,
									"end": 2145,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2105,
									"end": 2145,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2105,
									"end": 2145,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2105,
									"end": 2145,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 1081,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 196,
									"end": 1081,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 250,
									"end": 255,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 306,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 296,
									"end": 300,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 288,
									"end": 294,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 284,
									"end": 301,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 280,
									"end": 307,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 270,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 270,
									"end": 325,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 321,
									"end": 322,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 319,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 311,
									"end": 323,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 270,
									"end": 325,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 270,
									"end": 325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 344,
									"end": 357,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 357,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 406,
									"end": 416,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 406,
									"end": 416,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 406,
									"end": 416,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 403,
									"end": 439,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 403,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 403,
									"end": 439,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 419,
									"end": 437,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 494,
									"end": 496,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 488,
									"end": 497,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 462,
									"end": 464,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 548,
									"end": 561,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 548,
									"end": 561,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 544,
									"end": 566,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 544,
									"end": 566,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 544,
									"end": 566,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 568,
									"end": 570,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 540,
									"end": 571,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 536,
									"end": 576,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 524,
									"end": 577,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 524,
									"end": 577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 524,
									"end": 577,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 592,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 592,
									"end": 610,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 592,
									"end": 610,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 612,
									"end": 634,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 612,
									"end": 634,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 612,
									"end": 634,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 589,
									"end": 635,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 586,
									"end": 658,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 586,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 586,
									"end": 658,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 678,
									"end": 688,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 674,
									"end": 676,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 667,
									"end": 689,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 713,
									"end": 715,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 705,
									"end": 711,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 716,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 735,
									"end": 739,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 725,
									"end": 739,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 725,
									"end": 739,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 780,
									"end": 783,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 775,
									"end": 777,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 770,
									"end": 772,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 762,
									"end": 768,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 758,
									"end": 773,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 754,
									"end": 778,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 751,
									"end": 784,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 801,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 748,
									"end": 801,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 794,
									"end": 795,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 787,
									"end": 799,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 801,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 748,
									"end": 801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 819,
									"end": 820,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 810,
									"end": 820,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 810,
									"end": 820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 829,
									"end": 962,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 829,
									"end": 962,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 843,
									"end": 845,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 840,
									"end": 841,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 837,
									"end": 846,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 829,
									"end": 962,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 829,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 829,
									"end": 962,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 931,
									"end": 945,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 931,
									"end": 945,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 931,
									"end": 945,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 927,
									"end": 950,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 927,
									"end": 950,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 921,
									"end": 951,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 900,
									"end": 914,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 914,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 900,
									"end": 914,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 896,
									"end": 919,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 896,
									"end": 919,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 889,
									"end": 952,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 854,
									"end": 864,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 854,
									"end": 864,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 854,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 854,
									"end": 864,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 829,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 829,
									"end": 962,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 829,
									"end": 962,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 829,
									"end": 962,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 980,
									"end": 982,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 977,
									"end": 978,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 974,
									"end": 983,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 971,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1040,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1029,
									"end": 1031,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1021,
									"end": 1027,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1032,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1037,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1006,
									"end": 1041,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 971,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1069,
									"end": 1075,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 196,
									"end": 1081,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 1081,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1235,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1237,
									"end": 1243,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 1251,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1253,
									"end": 1259,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 1267,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1317,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1302,
									"end": 1311,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1312,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1285,
									"end": 1318,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1335,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1282,
									"end": 1335,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1282,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1370,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1370,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1416,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1399,
									"end": 1417,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1393,
									"end": 1418,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1370,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1370,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1467,
									"end": 1481,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1481,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1481,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1464,
									"end": 1498,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1464,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1464,
									"end": 1498,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1494,
									"end": 1495,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1484,
									"end": 1496,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1464,
									"end": 1498,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1464,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1578,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1570,
									"end": 1577,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1561,
									"end": 1567,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1559,
									"name": "DUP12",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1568,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1578,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1517,
									"end": 1578,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1517,
									"end": 1578,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1517,
									"end": 1578,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1507,
									"end": 1578,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 1507,
									"end": 1578,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1624,
									"end": 1626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1613,
									"end": 1622,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1628,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1628,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1587,
									"end": 1628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1653,
									"end": 1655,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1651,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1640,
									"end": 1656,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1673,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1637,
									"end": 1673,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1666,
									"end": 1667,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1659,
									"end": 1671,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1673,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1637,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1692,
									"end": 1755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1747,
									"end": 1754,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1736,
									"end": 1744,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1734,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1745,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1692,
									"end": 1755,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1692,
									"end": 1755,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1692,
									"end": 1755,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1692,
									"end": 1755,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1755,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1784,
									"end": 1793,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1798,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1774,
									"end": 1799,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1764,
									"end": 1799,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1764,
									"end": 1799,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1868,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1852,
									"end": 1861,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1867,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1868,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1818,
									"end": 1868,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1818,
									"end": 1868,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1868,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1868,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1937,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1932,
									"end": 1935,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1921,
									"end": 1930,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1937,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1887,
									"end": 1937,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1887,
									"end": 1937,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1887,
									"end": 1937,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1877,
									"end": 1937,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1877,
									"end": 1937,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1943,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1948,
									"end": 2328,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1948,
									"end": 2328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2023,
									"end": 2035,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2023,
									"end": 2035,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2023,
									"end": 2035,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2023,
									"end": 2035,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2082,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2082,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2070,
									"end": 2082,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2091,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2091,
									"end": 2152,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2149,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2137,
									"end": 2143,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2150,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2091,
									"end": 2152,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2091,
									"end": 2152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2190,
									"end": 2196,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2187,
									"end": 2201,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2167,
									"end": 2185,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2164,
									"end": 2202,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2322,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2161,
									"end": 2322,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2244,
									"end": 2254,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2239,
									"end": 2242,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2235,
									"end": 2255,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2232,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2225,
									"end": 2256,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2279,
									"end": 2283,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2269,
									"end": 2284,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2307,
									"end": 2311,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2304,
									"end": 2305,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2312,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2322,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2161,
									"end": 2322,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2161,
									"end": 2322,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 2328,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 2328,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 2328,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 2328,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2333,
									"end": 2460,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2333,
									"end": 2460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2394,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2389,
									"end": 2392,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2385,
									"end": 2405,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2382,
									"end": 2383,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 2406,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2422,
									"end": 2423,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2415,
									"end": 2430,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2449,
									"end": 2453,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2446,
									"end": 2447,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2439,
									"end": 2454,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2460,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2333,
									"end": 2460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "878"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1260,
									"end": 4482,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b461779ad5fe4b830de988dcb1c63f08a6fecc43df95921c99081c07080430a64736f6c63430008070033",
									".code": [
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "41C0E1B5"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "A457C2D7"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "A457C2D7"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "BDF89682"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "953B8FB8"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "77262D38"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "77262D38"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "7B3E5E7B"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "7E0D73D4"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "41C0E1B5"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "1F3A0E41"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "2AFCF480"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "2AFCF480"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "39509351"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "1F3A0E41"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "2037FCBF"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "11DF9995"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "11DF9995"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "6FEBE00"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 11549,
											"end": 11726,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3526,
											"end": 3713,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4169,
											"end": 4211,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4157,
											"end": 4212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4157,
											"end": 4212,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4157,
											"end": 4212,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4213,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4213,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3971,
											"end": 4219,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2617,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 3958,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3959,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3862,
											"end": 3960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3862,
											"end": 3960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3718,
											"end": 3966,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1761,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11903,
											"end": 11907,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 11891,
											"end": 11908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11908,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11873,
											"end": 11909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11863,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11846,
											"end": 11864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 11731,
											"end": 11915,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1571,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "878"
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1388,
											"end": 1431,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3777,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3765,
											"end": 3777,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3749,
											"end": 3777,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8713,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8752,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8753,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8789,
											"end": 8812,
											"name": "PUSH",
											"source": 8,
											"value": "54617267657420416C7265616479205261697365640000000000000000000000"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3740,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3852,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3853,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3853,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9418,
											"end": 9420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9457,
											"end": 9459,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9430,
											"end": 9460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9496,
											"end": 9523,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420477265617420456E6F7567682042616C616E63652100000000000000"
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9476,
											"end": 9494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9469,
											"end": 9524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9559,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9541,
											"end": 9559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 9216,
											"end": 9565,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3815,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4006,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 3995,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3982,
											"end": 3995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4040,
											"end": 4045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4045,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4055,
											"end": 4079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4061,
											"end": 4071,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4055,
											"end": 4079,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4055,
											"end": 4079,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4055,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 4086,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3127,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3115,
											"end": 3127,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3127,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8713,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8752,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8723,
											"end": 8753,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8789,
											"end": 8812,
											"name": "PUSH",
											"source": 8,
											"value": "54617267657420416C7265616479205261697365640000000000000000000000"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8509,
											"end": 8854,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3090,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3209,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3209,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8012,
											"end": 8014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 8015,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8051,
											"end": 8053,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8024,
											"end": 8054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8090,
											"end": 8115,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420656E6F75676820736861726573206C65667421000000000000000000"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7810,
											"end": 8157,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3164,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3263,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8403,
											"end": 8405,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8376,
											"end": 8406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8442,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E7472616374204973205061757365640000000000000000000000000000"
										},
										{
											"begin": 8422,
											"end": 8440,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8422,
											"end": 8440,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8422,
											"end": 8440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8463,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8162,
											"end": 8504,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3247,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3306,
											"end": 3313,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7665,
											"end": 7667,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7647,
											"end": 7668,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7743,
											"end": 7763,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E7472616374204973204B696C6C65640000000000000000000000000000"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7716,
											"end": 7764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7781,
											"end": 7799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7463,
											"end": 7805,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3297,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3385,
											"end": 3389,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3364,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 3347,
											"end": 3364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3457,
											"end": 3462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3439,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3490,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3478,
											"end": 3490,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3507,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3474,
											"end": 3569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3474,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3474,
											"end": 3569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3543,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3472,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3524,
											"end": 3537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "313CE56700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 2240,
											"end": 2253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2240,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2233,
											"end": 2255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2233,
											"end": 2255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2262,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2320,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9061,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9100,
											"end": 9102,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9073,
											"end": 9103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9139,
											"end": 9169,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C792041646D696E2043616E2050617573652F556E706175736500000000"
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9112,
											"end": 9170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8859,
											"end": 9211,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2848,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2855,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4278,
											"end": 4290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4263,
											"end": 4273,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6584,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6585,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "PUSH",
											"source": 8,
											"value": "446F204E6F7420486176652052465420546F74616C20537570706C7900000000"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6652,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6669,
											"end": 6687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6341,
											"end": 6693,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4244,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4340,
											"end": 4350,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4352,
											"end": 4365,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4352,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4334,
											"end": 4367,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4334,
											"end": 4367,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4334,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "42842E0E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4439,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "878"
										},
										{
											"begin": 4377,
											"end": 4412,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4412,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4412,
											"name": "PUSH",
											"source": 7,
											"value": "42842E0E"
										},
										{
											"begin": 4377,
											"end": 4412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4480,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2320,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9061,
											"end": 9063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9100,
											"end": 9102,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9073,
											"end": 9103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9139,
											"end": 9169,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C792041646D696E2043616E2050617573652F556E706175736500000000"
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9112,
											"end": 9170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8859,
											"end": 9211,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2302,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2676,
											"end": 2778,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2708,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2676,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2767,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2784,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10985,
											"end": 10987,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10988,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11024,
											"end": 11026,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10997,
											"end": 11027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11063,
											"end": 11097,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11036,
											"end": 11098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11141,
											"name": "PUSH",
											"source": 8,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11114,
											"end": 11132,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11114,
											"end": 11132,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11114,
											"end": 11132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11107,
											"end": 11142,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11159,
											"end": 11178,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11159,
											"end": 11178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10783,
											"end": 11184,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2861,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2969,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2957,
											"end": 2969,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2942,
											"end": 2969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2942,
											"end": 2969,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10580,
											"end": 10582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10562,
											"end": 10583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10619,
											"end": 10621,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10658,
											"end": 10692,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10631,
											"end": 10693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 10735,
											"name": "PUSH",
											"source": 8,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10709,
											"end": 10727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 10736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10753,
											"end": 10772,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10378,
											"end": 10778,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6140,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6122,
											"end": 6143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6179,
											"end": 6181,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6152,
											"end": 6182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6218,
											"end": 6252,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "PUSH",
											"source": 8,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6330,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6311,
											"end": 6330,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5938,
											"end": 6336,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9774,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9850,
											"end": 9884,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9830,
											"end": 9848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9885,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9921,
											"end": 9924,
											"name": "PUSH",
											"source": 8,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9901,
											"end": 9919,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9901,
											"end": 9919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9901,
											"end": 9919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9894,
											"end": 9925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9942,
											"end": 9961,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9942,
											"end": 9961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 9570,
											"end": 9967,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5749,
											"end": 5779,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5788,
											"end": 5850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5890,
											"name": "PUSH",
											"source": 8,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5927,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5908,
											"end": 5927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5535,
											"end": 5933,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9526,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11549,
											"end": 11726,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6939,
											"end": 6941,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6912,
											"end": 6942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6978,
											"end": 7009,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 6958,
											"end": 6976,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6958,
											"end": 6976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6958,
											"end": 6976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 7010,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6698,
											"end": 7051,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10174,
											"end": 10176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 10177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10213,
											"end": 10215,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 10193,
											"end": 10211,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10193,
											"end": 10211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10193,
											"end": 10211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10186,
											"end": 10216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10252,
											"end": 10286,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10225,
											"end": 10287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10330,
											"name": "PUSH",
											"source": 8,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10331,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10367,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10348,
											"end": 10367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 9972,
											"end": 10373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5315,
											"end": 5336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5375,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5445,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5487,
											"name": "PUSH",
											"source": 8,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5455,
											"end": 5488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5505,
											"end": 5524,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5505,
											"end": 5524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5131,
											"end": 5530,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7260,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7270,
											"end": 7300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7370,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7380,
											"end": 7416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7433,
											"end": 7452,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7433,
											"end": 7452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7056,
											"end": 7458,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11549,
											"end": 11726,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11394,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11430,
											"end": 11432,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 11410,
											"end": 11428,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11410,
											"end": 11428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11410,
											"end": 11428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11403,
											"end": 11433,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11469,
											"end": 11502,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 11449,
											"end": 11467,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11449,
											"end": 11467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11442,
											"end": 11503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11520,
											"end": 11538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 11189,
											"end": 11544,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3575,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 347,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 295,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 295,
											"end": 347,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 295,
											"end": 347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 215,
											"end": 401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 555,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 503,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 503,
											"end": 555,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 503,
											"end": 555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 785,
											"end": 837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 785,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 785,
											"end": 837,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 785,
											"end": 837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1174,
											"end": 1183,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1184,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1190,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1207,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1154,
											"end": 1207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1201,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1207,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 1154,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 1226,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1255,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1274,
											"end": 1312,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1312,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 1274,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1264,
											"end": 1312,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1264,
											"end": 1312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1357,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1344,
											"end": 1362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1363,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1321,
											"end": 1363,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1321,
											"end": 1363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1418,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1470,
											"end": 1476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1481,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1498,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1464,
											"end": 1498,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1498,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1464,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1584,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1574,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1562,
											"end": 1575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1585,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1548,
											"end": 1603,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1603,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1548,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1639,
											"end": 1641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1668,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1685,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 1651,
											"end": 1685,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1685,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 1651,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1733,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1710,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1734,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1694,
											"end": 1751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1751,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1694,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1778,
											"end": 1780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1781,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1812,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 2071,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1817,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2014,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 2071,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2076,
											"end": 2353,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2076,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2175,
											"end": 2182,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2194,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2199,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2216,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 2164,
											"end": 2216,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2216,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 2164,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2303,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2273,
											"end": 2305,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2263,
											"end": 2323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2538,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2358,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2417,
											"end": 2423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 2468,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2490,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2438,
											"end": 2490,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2488,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2490,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2438,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2532,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2538,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2543,
											"end": 2816,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2543,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2684,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2632,
											"end": 2684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2684,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2632,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2767,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2731,
											"end": 2786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2784,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 5126,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 4470,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4638,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4679,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4710,
											"end": 4712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4708,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4771,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4873,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4873,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4879,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4842,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4844,
											"end": 4846,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4847,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4880,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4789,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 4750,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4902,
											"end": 4915,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 4990,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4899,
											"end": 4990,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4975,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4962,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 4980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 4990,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4899,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5042,
											"end": 5044,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5030,
											"end": 5045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5047,
											"end": 5113,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 5026,
											"end": 5114,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5115,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5115,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5007,
											"end": 5120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5007,
											"end": 5120,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 5126,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4470,
											"end": 5126,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11920,
											"end": 12048,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 11920,
											"end": 12048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 11963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11991,
											"end": 11992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11987,
											"end": 11993,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 11985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11981,
											"end": 11994,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11978,
											"end": 12017,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11978,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11978,
											"end": 12017,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12033,
											"end": 12042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12033,
											"end": 12042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 12048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12053,
											"end": 12178,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 12053,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12093,
											"end": 12097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12118,
											"end": 12119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12112,
											"end": 12146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12112,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 12112,
											"end": 12146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12163,
											"end": 12172,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12163,
											"end": 12172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12178,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12183,
											"end": 12620,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 12183,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12262,
											"end": 12263,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12258,
											"end": 12270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12270,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 12270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12305,
											"end": 12317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12305,
											"end": 12317,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12305,
											"end": 12317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 12326,
											"end": 12387,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12380,
											"end": 12384,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 12372,
											"end": 12378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12385,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12326,
											"end": 12387,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 12326,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12433,
											"end": 12435,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12425,
											"end": 12431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12422,
											"end": 12436,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12402,
											"end": 12420,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12399,
											"end": 12437,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12396,
											"end": 12614,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12396,
											"end": 12614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 12396,
											"end": 12614,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12470,
											"end": 12547,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12467,
											"end": 12468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12460,
											"end": 12548,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12575,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 12568,
											"end": 12569,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12561,
											"end": 12576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12599,
											"end": 12603,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12596,
											"end": 12597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12589,
											"end": 12604,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12396,
											"end": 12614,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 12396,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12396,
											"end": 12614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12620,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12625,
											"end": 12809,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 12625,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12677,
											"end": 12754,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12774,
											"end": 12778,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 12771,
											"end": 12772,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12764,
											"end": 12779,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12795,
											"end": 12796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12803,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"amountRaised()": "7b3e5e7b",
							"amountUntilReachTarget()": "bdf89682",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"coin()": "11df9995",
							"dataAccessThreshold()": "06febe00",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"invest(uint256)": "2afcf480",
							"kill()": "41c0e1b5",
							"killed()": "1f3a0e41",
							"name()": "06fdde03",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"projectMarketplace()": "7e0d73d4",
							"redeemNFT()": "77262d38",
							"symbol()": "95d89b41",
							"targetAmount()": "953b8fb8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdrawInvestment(uint256)": "2037fcbf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dataAccessThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coinAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountUntilReachTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coin\",\"outputs\":[{\"internalType\":\"contract IERC20Extented\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataAccessThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectMarketplace\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundraising.sol\":\"Fundraising\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Fundraising.sol\":{\"keccak256\":\"0x40cf02e05c0a64041658bee31dd139a3d84b3e8b000f37e17567adc369ea29a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db81a0f4c34688d75ccd2117b6c1cac4fc00f8e0625149b67ea12e485cb7f1fd\",\"dweb:/ipfs/Qmb47adpMZVqJJGbesZAFNog2K7xY2VfC5zrdG4gqVayBY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 875,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "coin",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20Extented)870"
							},
							{
								"astId": 880,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "targetAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 882,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "amountRaised",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 884,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "dataAccessThreshold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 887,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "paused",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 890,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "killed",
								"offset": 1,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 892,
								"contract": "contracts/Fundraising.sol:Fundraising",
								"label": "admin",
								"offset": 2,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Extented)870": {
								"encoding": "inplace",
								"label": "contract IERC20Extented",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Extented": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundraising.sol\":\"IERC20Extented\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Fundraising.sol\":{\"keccak256\":\"0x40cf02e05c0a64041658bee31dd139a3d84b3e8b000f37e17567adc369ea29a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db81a0f4c34688d75ccd2117b6c1cac4fc00f8e0625149b67ea12e485cb7f1fd\",\"dweb:/ipfs/Qmb47adpMZVqJJGbesZAFNog2K7xY2VfC5zrdG4gqVayBY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							844
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 845,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								844
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 585,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 585,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 585,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 585,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 585,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 585,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 585,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 585,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 585,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 585,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5967:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6089:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 585,
									"src": "5873:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6693:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "6719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6741:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6947:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6966:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7003:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:0"
									},
									"scope": 585,
									"src": "6594:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7583:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7679:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7746:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7817:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7850:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7948:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7958:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8040:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:0"
									},
									"scope": 585,
									"src": "7475:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8467:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8645:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8683:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8736:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:0"
									},
									"scope": 585,
									"src": "8402:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9176:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9324:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9349:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9385:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9482:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9546:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9579:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9632:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:0"
									},
									"scope": 585,
									"src": "9111:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10223:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10436:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 585,
									"src": "10110:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10881:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "10891:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "10953:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "10996:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11018:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11129:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11145:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11120:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:0"
									},
									"scope": 585,
									"src": "10761:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11905:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:0"
									},
									"scope": 585,
									"src": "11786:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12613:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12533:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12555:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:0"
									},
									"scope": 585,
									"src": "12495:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1403:11214:0",
							"usedErrors": []
						}
					],
					"src": "105:12513:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 663,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 663,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 663,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 663,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 663,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 663,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "305:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 688,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 688,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 688,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							856
						],
						"IERC721": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 857,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 693,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "271:7:3"
									},
									"id": 694,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 804,
							"linearizedBaseContracts": [
								804,
								856
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 703,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 712,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 721,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 804,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 804,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 804,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2701:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "2721:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:3"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:3"
									},
									"scope": 804,
									"src": "2644:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3298:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3320:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3340:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:3"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:3"
									},
									"scope": 804,
									"src": "3267:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3851:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "3863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:3"
									},
									"scope": 804,
									"src": "3834:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4236:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "4254:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:3"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:3"
									},
									"scope": 804,
									"src": "4209:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4450:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:3"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4490:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:3"
									},
									"scope": 804,
									"src": "4429:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4698:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:3"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:3"
									},
									"scope": 804,
									"src": "4657:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 805,
							"src": "250:4497:3",
							"usedErrors": []
						}
					],
					"src": "108:4640:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							822
						]
					},
					"id": 823,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 822,
							"linearizedBaseContracts": [
								822
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "859:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "885:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "907:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "932:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 815,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "976:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 818,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:4"
									},
									"scope": 822,
									"src": "824:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 823,
							"src": "294:692:4",
							"usedErrors": []
						}
					],
					"src": "116:871:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 824,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 825,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 830,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 829,
												"id": 832,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 844,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 839,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 838,
												"id": 841,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 844,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 845,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 849,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 856,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 857,
							"src": "405:447:6",
							"usedErrors": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"contracts/Fundraising.sol": {
				"ast": {
					"absolutePath": "contracts/Fundraising.sol",
					"exportedSymbols": {
						"Context": [
							844
						],
						"ERC20": [
							585
						],
						"Fundraising": [
							1174
						],
						"IERC165": [
							856
						],
						"IERC20": [
							663
						],
						"IERC20Extented": [
							870
						],
						"IERC20Metadata": [
							688
						],
						"IERC721": [
							804
						],
						"IERC721Receiver": [
							822
						]
					},
					"id": 1175,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:22:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 586,
							"src": "248:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 860,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 664,
							"src": "304:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 861,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 805,
							"src": "361:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1175,
							"sourceUnit": 823,
							"src": "420:66:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 863,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1187:6:7"
									},
									"id": 864,
									"nodeType": "InheritanceSpecifier",
									"src": "1187:6:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 870,
							"linearizedBaseContracts": [
								870,
								663
							],
							"name": "IERC20Extented",
							"nameLocation": "1169:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1209:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:2:7"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1249:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 866,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1249:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:7:7"
									},
									"scope": 870,
									"src": "1200:56:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1175,
							"src": "1151:107:7",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 871,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "1284:5:7"
									},
									"id": 872,
									"nodeType": "InheritanceSpecifier",
									"src": "1284:5:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1174,
							"linearizedBaseContracts": [
								1174,
								585,
								688,
								663,
								844
							],
							"name": "Fundraising",
							"nameLocation": "1269:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11df9995",
									"id": 875,
									"mutability": "mutable",
									"name": "coin",
									"nameLocation": "1318:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1296:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Extented_$870",
										"typeString": "contract IERC20Extented"
									},
									"typeName": {
										"id": 874,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 873,
											"name": "IERC20Extented",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 870,
											"src": "1296:14:7"
										},
										"referencedDeclaration": 870,
										"src": "1296:14:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Extented_$870",
											"typeString": "contract IERC20Extented"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e0d73d4",
									"id": 878,
									"mutability": "immutable",
									"name": "projectMarketplace",
									"nameLocation": "1413:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1388:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$804",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 877,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 876,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 804,
											"src": "1388:7:7"
										},
										"referencedDeclaration": 804,
										"src": "1388:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$804",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "953b8fb8",
									"id": 880,
									"mutability": "mutable",
									"name": "targetAmount",
									"nameLocation": "1526:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1511:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 879,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1511:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b3e5e7b",
									"id": 882,
									"mutability": "mutable",
									"name": "amountRaised",
									"nameLocation": "1559:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1544:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 881,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1544:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06febe00",
									"id": 884,
									"mutability": "mutable",
									"name": "dataAccessThreshold",
									"nameLocation": "1592:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1577:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 883,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1577:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 887,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "1714:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1702:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 885,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1702:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 886,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1723:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f3a0e41",
									"id": 890,
									"mutability": "mutable",
									"name": "killed",
									"nameLocation": "1747:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1735:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 888,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1735:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 889,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1756:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 892,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "1775:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "1767:13:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 891,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "1944:208:7",
										"statements": [
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 911,
														"name": "targetAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "1954:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 912,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1969:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1954:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "1954:21:7"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "dataAccessThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1985:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 916,
														"name": "_dataAccessThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "2007:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1985:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "1985:42:7"
											},
											{
												"expression": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 919,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "2037:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 920,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "2045:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2037:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "2037:14:7"
											},
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 923,
														"name": "coin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "2061:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Extented_$870",
															"typeString": "contract IERC20Extented"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 925,
																"name": "coinAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "2083:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 924,
															"name": "IERC20Extented",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "2068:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Extented_$870_$",
																"typeString": "type(contract IERC20Extented)"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2068:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Extented_$870",
															"typeString": "contract IERC20Extented"
														}
													},
													"src": "2061:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Extented_$870",
														"typeString": "contract IERC20Extented"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "2061:34:7"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 929,
														"name": "projectMarketplace",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "2105:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$804",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 931,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2134:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2134:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 930,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "2126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$804_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2126:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$804",
															"typeString": "contract IERC721"
														}
													},
													"src": "2105:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$804",
														"typeString": "contract IERC721"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "2105:40:7"
											}
										]
									},
									"id": 937,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 907,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 896,
													"src": "1930:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 908,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 898,
													"src": "1936:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 909,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 906,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "1924:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1924:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1807:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1799:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1829:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1815:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1815:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1849:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1835:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1835:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "_dataAccessThreshold",
												"nameLocation": "1865:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1857:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "1895:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1887:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "coinAddress",
												"nameLocation": "1911:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:125:7"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1944:0:7"
									},
									"scope": 1174,
									"src": "1787:365:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										74
									],
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2223:39:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 943,
															"name": "coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "2240:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Extented_$870",
																"typeString": "contract IERC20Extented"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 869,
														"src": "2240:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2240:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 942,
												"id": 946,
												"nodeType": "Return",
												"src": "2233:22:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2167:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 939,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2198:8:7"
									},
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2175:2:7"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2216:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 940,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2216:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:7:7"
									},
									"scope": 1174,
									"src": "2158:104:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "2288:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 951,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2310:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2310:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 953,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "2324:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2310:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792041646d696e2043616e2050617573652f556e7061757365",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2331:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8adb99af62dac0fce1074ed978464b907f5354493d95e0f43fd5b8e35f739f97",
																"typeString": "literal_string \"Only Admin Can Pause/Unpause\""
															},
															"value": "Only Admin Can Pause/Unpause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8adb99af62dac0fce1074ed978464b907f5354493d95e0f43fd5b8e35f739f97",
																"typeString": "literal_string \"Only Admin Can Pause/Unpause\""
															}
														],
														"id": 950,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2302:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "2302:60:7"
											},
											{
												"id": 958,
												"nodeType": "PlaceholderStatement",
												"src": "2376:1:7"
											}
										]
									},
									"id": 960,
									"name": "onlyOwner",
									"nameLocation": "2277:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:2:7"
									},
									"src": "2268:116:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2559:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 973,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "2576:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$822_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 821,
														"src": "2576:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "2576:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 972,
												"id": 976,
												"nodeType": "Return",
												"src": "2569:48:7"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "2468:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2485:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2494:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2503:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2512:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:43:7"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2551:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 970,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2551:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:8:7"
									},
									"scope": 1174,
									"src": "2459:165:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "2666:118:7",
										"statements": [
											{
												"condition": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2680:7:7",
													"subExpression": {
														"id": 983,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2681:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "2739:39:7",
													"statements": [
														{
															"expression": {
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 990,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "2753:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2762:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2753:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "2753:14:7"
														}
													]
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "2676:102:7",
												"trueBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "2688:38:7",
													"statements": [
														{
															"expression": {
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 985,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "2702:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2711:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2702:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 988,
															"nodeType": "ExpressionStatement",
															"src": "2702:13:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 981,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 980,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "2647:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2647:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "2639:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2644:2:7"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2666:0:7"
									},
									"scope": 1174,
									"src": "2630:154:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "2825:30:7",
										"statements": [
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1002,
														"name": "killed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "2835:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2844:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2835:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "2835:13:7"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "2806:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2806:9:7"
										}
									],
									"name": "kill",
									"nameLocation": "2799:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2803:2:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2825:0:7"
									},
									"scope": 1174,
									"src": "2790:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2924:54:7",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "targetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "2942:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1013,
																"name": "amountRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "2957:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2942:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1015,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2941:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1016,
												"nodeType": "Return",
												"src": "2934:36:7"
											}
										]
									},
									"functionSelector": "bdf89682",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amountUntilReachTarget",
									"nameLocation": "2870:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:2:7"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2916:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:9:7"
									},
									"scope": 1174,
									"src": "2861:117:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "3080:495:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1024,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "3099:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3099:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1026,
																"name": "targetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "3115:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3099:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420416c726561647920526169736564",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3129:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded",
																"typeString": "literal_string \"Target Already Raised\""
															},
															"value": "Target Already Raised"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded",
																"typeString": "literal_string \"Target Already Raised\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3090:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "3090:64:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3172:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1033,
																	"name": "targetAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "3181:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1034,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "3196:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3196:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3181:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3172:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820736861726573206c65667421",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7af8217c35f176a33316517d02b08565f8969c0aea40184a2c4e9b2abf9b356d",
																"typeString": "literal_string \"Not enough shares left!\""
															},
															"value": "Not enough shares left!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7af8217c35f176a33316517d02b08565f8969c0aea40184a2c4e9b2abf9b356d",
																"typeString": "literal_string \"Not enough shares left!\""
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3164:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "3164:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3256:7:7",
															"subExpression": {
																"id": 1042,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "3257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420497320506175736564",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3265:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b9cc13ec0b489fd142f081d5b12d42981606b74fef6982976a24a2c6cfa9863",
																"typeString": "literal_string \"Contract Is Paused\""
															},
															"value": "Contract Is Paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7b9cc13ec0b489fd142f081d5b12d42981606b74fef6982976a24a2c6cfa9863",
																"typeString": "literal_string \"Contract Is Paused\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3247:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "3247:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3306:7:7",
															"subExpression": {
																"id": 1048,
																"name": "killed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "3307:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374204973204b696c6c6564",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6990363dc6c42cdaa9cd8c906d3b5b9161e05276ca16ae04ae731843302a3c68",
																"typeString": "literal_string \"Contract Is Killed\""
															},
															"value": "Contract Is Killed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6990363dc6c42cdaa9cd8c906d3b5b9161e05276ca16ae04ae731843302a3c68",
																"typeString": "literal_string \"Contract Is Killed\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3297:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3297:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "3297:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1056,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3365:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3365:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1060,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3385:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Fundraising_$1174",
																		"typeString": "contract Fundraising"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Fundraising_$1174",
																		"typeString": "contract Fundraising"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3377:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1058,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3377:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3377:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "3392:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1053,
															"name": "coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3347:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Extented_$870",
																"typeString": "contract IERC20Extented"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 662,
														"src": "3347:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3347:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "3347:51:7"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "amountRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "3408:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1066,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3424:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3408:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3408:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1070,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3445:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3445:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "3457:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "3439:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3439:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "3439:24:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1075,
														"name": "targetAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3478:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1076,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3494:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3494:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3478:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "3474:95:7",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "3509:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1082,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "3538:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "targetAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "3545:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1079,
																		"name": "coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "3524:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Extented_$870",
																			"typeString": "contract IERC20Extented"
																		}
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "3524:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3524:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1085,
															"nodeType": "ExpressionStatement",
															"src": "3524:34:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2afcf480",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invest",
									"nameLocation": "3049:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3064:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "3056:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:15:7"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3080:0:7"
									},
									"scope": 1174,
									"src": "3040:535:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "3730:356:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1095,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "3749:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3749:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1097,
																"name": "targetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "3765:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3749:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617267657420416c726561647920526169736564",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3780:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded",
																"typeString": "literal_string \"Target Already Raised\""
															},
															"value": "Target Already Raised"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bb14d6d839c433188a730a6348f1b3eea222110794c4e4687ecd3cc93a4cded",
																"typeString": "literal_string \"Target Already Raised\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3740:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3740:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "3740:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "3823:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1105,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3842:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3842:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "3832:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3832:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3823:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420477265617420456e6f7567682042616c616e636521",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3855:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a464dbc44826ceeac304f4f9e62b275a1e756d34893e60c3ed6d23964bf112b6",
																"typeString": "literal_string \"Not Great Enough Balance!\""
															},
															"value": "Not Great Enough Balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a464dbc44826ceeac304f4f9e62b275a1e756d34893e60c3ed6d23964bf112b6",
																"typeString": "literal_string \"Not Great Enough Balance!\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3815:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3815:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "3815:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3996:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3996:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "4008:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1112,
															"name": "coin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3982:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Extented_$870",
																"typeString": "contract IERC20Extented"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "3982:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "3982:32:7"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1120,
														"name": "amountRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4024:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1121,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "4040:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4024:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "4024:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4061:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4061:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "4073:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "4055:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4055:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "4055:24:7"
											}
										]
									},
									"functionSelector": "2037fcbf",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawInvestment",
									"nameLocation": "3687:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3714:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "3706:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3705:15:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:0:7"
									},
									"scope": 1174,
									"src": "3678:408:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "4234:246:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1136,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4263:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4263:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1135,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "4253:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4253:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1139,
																"name": "targetAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "4278:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4253:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f204e6f7420486176652052465420546f74616c20537570706c79",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4292:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2581b1427edf8c40f5befb3931a66ae1e24674307b76535e01fb1432198ee9ed",
																"typeString": "literal_string \"Do Not Have RFT Total Supply\""
															},
															"value": "Do Not Have RFT Total Supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2581b1427edf8c40f5befb3931a66ae1e24674307b76535e01fb1432198ee9ed",
																"typeString": "literal_string \"Do Not Have RFT Total Supply\""
															}
														],
														"id": 1134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4244:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4244:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "4244:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4340:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4340:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1147,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "4352:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1144,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "4334:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "4334:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4422:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Fundraising_$1174",
																		"typeString": "contract Fundraising"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Fundraising_$1174",
																		"typeString": "contract Fundraising"
																	}
																],
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4414:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4414:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4414:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1158,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4429:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4429:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1166,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4465:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Fundraising_$1174",
																						"typeString": "contract Fundraising"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Fundraising_$1174",
																						"typeString": "contract Fundraising"
																					}
																				],
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4457:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1164,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4457:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4457:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4449:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1162,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "4449:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4449:22:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4441:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4441:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4441:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1151,
															"name": "projectMarketplace",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4377:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$804",
																"typeString": "contract IERC721"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 759,
														"src": "4377:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4377:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4377:96:7"
											}
										]
									},
									"functionSelector": "77262d38",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemNFT",
									"nameLocation": "4213:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:2:7"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4234:0:7"
									},
									"scope": 1174,
									"src": "4204:276:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1175,
							"src": "1260:3222:7",
							"usedErrors": []
						}
					],
					"src": "39:4443:7"
				},
				"id": 7
			}
		}
	}
}